{
    "questions": [
        {
            "top10": [
                {
                    "label": "Djibouti",
                    "number": 8.032743245041928
                },
                {
                    "label": "Liechtenstein",
                    "number": 5.41497975708502
                },
                {
                    "label": "Equatorial Guinea",
                    "number": 5.034109621265585
                },
                {
                    "label": "Brunei",
                    "number": 4.794625133608185
                },
                {
                    "label": "Venezuela",
                    "number": 4.345714642505308
                },
                {
                    "label": "Aruba",
                    "number": 4.233095107201759
                },
                {
                    "label": "Qatar",
                    "number": 4.095866879152266
                },
                {
                    "label": "Tuvalu",
                    "number": 4.068348250610252
                },
                {
                    "label": "Belarus",
                    "number": 4.031354983202688
                },
                {
                    "label": "Colombia",
                    "number": 3.690444621232211
                }
            ],
            "answer": "Djibouti",
            "answerValue": 8.032743245041928,
            "question": "Which country was the most cooperative last year?",
            "rowIndex": 2,
            "approved": true,
            "params": {
                "codes": "('031', '030')",
                "min_events": 1000,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('031', '030') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1000\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('031', '030') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1000\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "% of Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380821133
        },
        {
            "top10": [
                {
                    "label": "Armenia",
                    "number": 3.2123305231725157
                },
                {
                    "label": "Azerbaijan",
                    "number": 1.01638827607942
                },
                {
                    "label": "Colombia",
                    "number": 0.9170865376115973
                },
                {
                    "label": "Algeria",
                    "number": 0.8941597251635371
                },
                {
                    "label": "Belarus",
                    "number": 0.8614006374364717
                },
                {
                    "label": "Macao",
                    "number": 0.764525993883792
                },
                {
                    "label": "Kazakhstan",
                    "number": 0.7234254193606728
                },
                {
                    "label": "Kyrgyzstan",
                    "number": 0.7117667993141157
                },
                {
                    "label": "Central African Republic",
                    "number": 0.6794055201698513
                },
                {
                    "label": "Bolivia",
                    "number": 0.6625149065853981
                }
            ],
            "answer": "Armenia",
            "answerValue": 3.2123305231725157,
            "question": "Which country had the most cooperative military last year?",
            "rowIndex": 14,
            "approved": true,
            "params": {
                "codes": "('0312')",
                "min_events": 1,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0312') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0312') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "South Sudan",
                    "number": 313
                },
                {
                    "label": "Somalia",
                    "number": 122
                },
                {
                    "label": "Mali",
                    "number": 110
                },
                {
                    "label": "Sudan",
                    "number": 85
                },
                {
                    "label": "Central African Republic",
                    "number": 57
                },
                {
                    "label": "Egypt",
                    "number": 55
                },
                {
                    "label": "Haiti",
                    "number": 50
                },
                {
                    "label": "Canada",
                    "number": 50
                },
                {
                    "label": "Burundi",
                    "number": 50
                },
                {
                    "label": "Lebanon",
                    "number": 48
                }
            ],
            "answer": "South Sudan",
            "answerValue": 313,
            "question": "Which country allowed the most peacekeepers into it last year?",
            "rowIndex": 25,
            "approved": true,
            "params": {
                "codes": "('0861')",
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0861') THEN 1 ELSE 0 END) total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016 \nGROUP BY\n  codes.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  'userInput',\n  COUNT(*)\nFROM (\n  SELECT\n    events.GLOBALEVENTID,\n  FROM\n    [gdelt-bq:full.events] events\n  JOIN\n    [gdelt-bq:extra.countryinfo] codes\n  ON\n    events.Actor1CountryCode = codes.iso3\n  JOIN (\n    SELECT\n      *\n    FROM (\n      SELECT\n        sub,\n        obj AS alias,\n        CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n        SUM(input) OVER (PARTITION BY sub) AS input_alias\n      FROM\n        [fh-bigquery:freebase20140119.triples_lang_en]\n      WHERE\n        (pred = '/common/topic/alias'\n          OR pred = '/type/object/name'))\n    WHERE\n      input_alias \u003e 0) aliases\n  ON\n    aliases.alias = codes.country\n  WHERE\n    Year = 2016\n    AND events.EventCode IN ('0861') \n  GROUP BY\n    events.GLOBALEVENTID)\n  IGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "United Kingdom",
                    "number": 37302
                },
                {
                    "label": "China",
                    "number": 30193
                },
                {
                    "label": "New Zealand",
                    "number": 24177
                },
                {
                    "label": "Canada",
                    "number": 15436
                },
                {
                    "label": "France",
                    "number": 14326
                },
                {
                    "label": "Indonesia",
                    "number": 12310
                },
                {
                    "label": "Japan",
                    "number": 9600
                },
                {
                    "label": "Malaysia",
                    "number": 8840
                },
                {
                    "label": "Vietnam",
                    "number": 7117
                },
                {
                    "label": "Italy",
                    "number": 5734
                }
            ],
            "answer": "United Kingdom",
            "answerValue": 37302,
            "question": "Which country, other than the United States, was mentioned the most with Australia last year?",
            "rowIndex": 18,
            "approved": true,
            "params": {
                "country": "Australia",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Australia' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Australia' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761328085
        },
        {
            "top10": [
                {
                    "label": "Iceland",
                    "number": 6.132772281659878
                },
                {
                    "label": "Gabon",
                    "number": 3.5103115401491882
                },
                {
                    "label": "Republic of the Congo",
                    "number": 3.3172005002990916
                },
                {
                    "label": "Moldova",
                    "number": 3.081037088710615
                },
                {
                    "label": "Panama",
                    "number": 2.514812627407647
                },
                {
                    "label": "Gambia",
                    "number": 2.454031368922716
                },
                {
                    "label": "Tuvalu",
                    "number": 2.441008950366151
                },
                {
                    "label": "Sao Tome and Principe",
                    "number": 2.2970903522205206
                },
                {
                    "label": "Croatia",
                    "number": 2.144960942502241
                },
                {
                    "label": "Zambia",
                    "number": 1.6730895760879783
                }
            ],
            "answer": "Iceland",
            "answerValue": 6.132772281659878,
            "question": "Which country called for leadership change the most last year?",
            "rowIndex": 8,
            "approved": true,
            "params": {
                "codes": "('0241')",
                "min_events": 1,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0241') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0241') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "Israel",
                    "number": 23945
                },
                {
                    "label": "Saudi Arabia",
                    "number": 18247
                },
                {
                    "label": "Russia",
                    "number": 12105
                },
                {
                    "label": "France",
                    "number": 11621
                },
                {
                    "label": "Italy",
                    "number": 8190
                },
                {
                    "label": "United Kingdom",
                    "number": 6995
                },
                {
                    "label": "Syria",
                    "number": 6155
                },
                {
                    "label": "Palestinian Territory",
                    "number": 6073
                },
                {
                    "label": "Turkey",
                    "number": 5937
                },
                {
                    "label": "China",
                    "number": 5657
                }
            ],
            "answer": "Israel",
            "answerValue": 23945,
            "question": "Which country, other than the United States, was mentioned with Egypt the most last year?",
            "rowIndex": 6,
            "approved": true,
            "params": {
                "country": "Egypt",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Egypt' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Egypt' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761320874
        },
        {
            "top10": [
                {
                    "label": "Guyana",
                    "number": 2.9318348399706817
                },
                {
                    "label": "Honduras",
                    "number": 1.8975332068311195
                },
                {
                    "label": "Republic of the Congo",
                    "number": 1.0876067214095384
                },
                {
                    "label": "Cayman Islands",
                    "number": 1.0563008344776592
                },
                {
                    "label": "Taiwan",
                    "number": 0.7455801079227207
                },
                {
                    "label": "Belgium",
                    "number": 0.5892484815519898
                },
                {
                    "label": "Italy",
                    "number": 0.5883358220872474
                },
                {
                    "label": "Brazil",
                    "number": 0.5657744194525818
                },
                {
                    "label": "Finland",
                    "number": 0.5312273121668762
                },
                {
                    "label": "Bangladesh",
                    "number": 0.46415989380021627
                }
            ],
            "answer": "Guyana",
            "answerValue": 2.9318348399706817,
            "question": "Which country willingly shared the most intelligence last year?",
            "rowIndex": 16,
            "approved": true,
            "params": {
                "codes": "('0314')",
                "min_events": 1,
                "per": 10000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0314') THEN 1 ELSE 0 END) * 10000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0314') THEN 1 ELSE 0 END) * 10000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "United States",
                    "number": 51710
                },
                {
                    "label": "United Kingdom",
                    "number": 8204
                },
                {
                    "label": "Iran",
                    "number": 6684
                },
                {
                    "label": "Nigeria",
                    "number": 6094
                },
                {
                    "label": "China",
                    "number": 5985
                },
                {
                    "label": "Pakistan",
                    "number": 5927
                },
                {
                    "label": "Afghanistan",
                    "number": 5043
                },
                {
                    "label": "Turkey",
                    "number": 4618
                },
                {
                    "label": "Israel",
                    "number": 4576
                },
                {
                    "label": "India",
                    "number": 3770
                }
            ],
            "answer": "United States",
            "answerValue": 51710,
            "question": "Which country released the most people from prison last year?",
            "rowIndex": 24,
            "approved": true,
            "params": {
                "codes": "('0841')",
                "min_events": 3000,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0841') THEN 1 ELSE 0 END) total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016 \nGROUP BY\n  codes.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  'userInput',\n  COUNT(*)\nFROM (\n  SELECT\n    events.GLOBALEVENTID,\n  FROM\n    [gdelt-bq:full.events] events\n  JOIN\n    [gdelt-bq:extra.countryinfo] codes\n  ON\n    events.Actor1CountryCode = codes.iso3\n  JOIN (\n    SELECT\n      *\n    FROM (\n      SELECT\n        sub,\n        obj AS alias,\n        CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n        SUM(input) OVER (PARTITION BY sub) AS input_alias\n      FROM\n        [fh-bigquery:freebase20140119.triples_lang_en]\n      WHERE\n        (pred = '/common/topic/alias'\n          OR pred = '/type/object/name'))\n    WHERE\n      input_alias \u003e 0) aliases\n  ON\n    aliases.alias = codes.country\n  WHERE\n    Year = 2016\n    AND events.EventCode IN ('0841') \n  GROUP BY\n    events.GLOBALEVENTID)\n  IGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "China",
                    "number": 26732
                },
                {
                    "label": "United Kingdom",
                    "number": 12384
                },
                {
                    "label": "Iran",
                    "number": 10555
                },
                {
                    "label": "Russia",
                    "number": 10514
                },
                {
                    "label": "Canada",
                    "number": 9670
                },
                {
                    "label": "Australia",
                    "number": 8513
                },
                {
                    "label": "Japan",
                    "number": 8120
                },
                {
                    "label": "Vietnam",
                    "number": 6721
                },
                {
                    "label": "Pakistan",
                    "number": 5933
                },
                {
                    "label": "Turkey",
                    "number": 5640
                }
            ],
            "answer": "China",
            "answerValue": 26732,
            "question": "Which country, besides the United States, provided the most economic support to other countries last year?",
            "rowIndex": 17,
            "approved": true,
            "params": {
                "codes": "('061')",
                "filter_us": true,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('061') THEN 1 ELSE 0 END) total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016 \n  AND codes.country != 'United States'\nGROUP BY\n  codes.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  'userInput',\n  COUNT(*)\nFROM (\n  SELECT\n    events.GLOBALEVENTID,\n  FROM\n    [gdelt-bq:full.events] events\n  JOIN\n    [gdelt-bq:extra.countryinfo] codes\n  ON\n    events.Actor1CountryCode = codes.iso3\n  JOIN (\n    SELECT\n      *\n    FROM (\n      SELECT\n        sub,\n        obj AS alias,\n        CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n        SUM(input) OVER (PARTITION BY sub) AS input_alias\n      FROM\n        [fh-bigquery:freebase20140119.triples_lang_en]\n      WHERE\n        (pred = '/common/topic/alias'\n          OR pred = '/type/object/name'))\n    WHERE\n      input_alias \u003e 0) aliases\n  ON\n    aliases.alias = codes.country\n  WHERE\n    Year = 2016\n    AND events.EventCode IN ('061') \n  AND codes.country != 'United States'\n  GROUP BY\n    events.GLOBALEVENTID)\n  IGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579150
        },
        {
            "top10": [
                {
                    "label": "Russia",
                    "number": 125214
                },
                {
                    "label": "Turkey",
                    "number": 93798
                },
                {
                    "label": "Iran",
                    "number": 35169
                },
                {
                    "label": "Iraq",
                    "number": 34790
                },
                {
                    "label": "United Kingdom",
                    "number": 26099
                },
                {
                    "label": "Lebanon",
                    "number": 20915
                },
                {
                    "label": "Israel",
                    "number": 17446
                },
                {
                    "label": "Saudi Arabia",
                    "number": 16576
                },
                {
                    "label": "France",
                    "number": 15439
                },
                {
                    "label": "Germany",
                    "number": 15383
                }
            ],
            "answer": "Russia",
            "answerValue": 125214,
            "question": "Which country, other than the United States, was mentioned with Syria the most last year?",
            "rowIndex": 7,
            "approved": true,
            "params": {
                "country": "Syria",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Syria' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Syria' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761323284
        },
        {
            "top10": [
                {
                    "label": "Namibia",
                    "number": 4.397740949912045
                },
                {
                    "label": "Cape Verde",
                    "number": 3.6607687614399023
                },
                {
                    "label": "Japan",
                    "number": 3.1020826492333105
                },
                {
                    "label": "Haiti",
                    "number": 2.6094145610499666
                },
                {
                    "label": "Luxembourg",
                    "number": 2.201134807278419
                },
                {
                    "label": "Mexico",
                    "number": 1.7992643514107522
                },
                {
                    "label": "Barbados",
                    "number": 1.6617569302817434
                },
                {
                    "label": "Nauru",
                    "number": 1.629327902240326
                },
                {
                    "label": "Turkey",
                    "number": 1.5900321977548937
                },
                {
                    "label": "Rwanda",
                    "number": 1.5887934121016827
                }
            ],
            "answer": "Namibia",
            "answerValue": 4.397740949912045,
            "question": "Which country was apologized to the most last year?",
            "rowIndex": 22,
            "approved": true,
            "params": {
                "codes": "('055')",
                "min_events": 1000,
                "per": 1000,
                "relation": "Actor2CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('055') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor2CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1000\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('055') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor2CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1000\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380820594
        },
        {
            "top10": [
                {
                    "label": "Colombia",
                    "number": 2.4529302572261997
                },
                {
                    "label": "Palau",
                    "number": 2.1285653469561514
                },
                {
                    "label": "Andorra",
                    "number": 1.953125
                },
                {
                    "label": "Guinea-Bissau",
                    "number": 1.8273184102329831
                },
                {
                    "label": "Lesotho",
                    "number": 1.6814797021378813
                },
                {
                    "label": "Mali",
                    "number": 1.4940664219243576
                },
                {
                    "label": "Samoa",
                    "number": 1.3426680732713148
                },
                {
                    "label": "Rwanda",
                    "number": 1.247193813918683
                },
                {
                    "label": "South Sudan",
                    "number": 1.1547844161843035
                },
                {
                    "label": "Nigeria",
                    "number": 1.0749794788999603
                }
            ],
            "answer": "Colombia",
            "answerValue": 2.4529302572261997,
            "question": "Which country was the most forgiving last year?",
            "rowIndex": 23,
            "approved": true,
            "params": {
                "codes": "('056')",
                "min_events": 1,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('056') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('056') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380821141
        },
        {
            "top10": [
                {
                    "label": "Czech Republic",
                    "number": 0.43242464099745953
                },
                {
                    "label": "Cuba",
                    "number": 0.3979533826037521
                },
                {
                    "label": "Slovakia",
                    "number": 0.2773155851358846
                },
                {
                    "label": "Bulgaria",
                    "number": 0.15427986367270227
                },
                {
                    "label": "Sudan",
                    "number": 0.15142501757611812
                },
                {
                    "label": "Myanmar",
                    "number": 0.11624097811499402
                },
                {
                    "label": "Eritrea",
                    "number": 0.10990822663076331
                },
                {
                    "label": "Guyana",
                    "number": 0.09772782799902271
                },
                {
                    "label": "Italy",
                    "number": 0.09525437119507815
                },
                {
                    "label": "Hungary",
                    "number": 0.09368559115608019
                }
            ],
            "answer": "Czech Republic",
            "answerValue": 0.43242464099745953,
            "question": "Which country asked to ease economic sanctions the most last year?",
            "rowIndex": 5,
            "approved": true,
            "params": {
                "codes": "('0254')",
                "min_events": 1,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0254') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0254') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "United Kingdom",
                    "number": 170216
                },
                {
                    "label": "Russia",
                    "number": 155717
                },
                {
                    "label": "China",
                    "number": 152031
                },
                {
                    "label": "Canada",
                    "number": 121406
                },
                {
                    "label": "Mexico",
                    "number": 118842
                },
                {
                    "label": "France",
                    "number": 91170
                },
                {
                    "label": "Israel",
                    "number": 80876
                },
                {
                    "label": "Iran",
                    "number": 78705
                },
                {
                    "label": "Japan",
                    "number": 72137
                },
                {
                    "label": "Australia",
                    "number": 71171
                }
            ],
            "answer": "United Kingdom",
            "answerValue": 170216,
            "question": "Which country was mentioned the most with the United States last year?",
            "rowIndex": 20,
            "approved": true,
            "params": {
                "country": "United States",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'United States' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'United States' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761343835
        },
        {
            "top10": [
                {
                    "label": "Canada",
                    "number": 11008
                },
                {
                    "label": "Spain",
                    "number": 4930
                },
                {
                    "label": "Cuba",
                    "number": 4489
                },
                {
                    "label": "China",
                    "number": 4399
                },
                {
                    "label": "Russia",
                    "number": 2969
                },
                {
                    "label": "United Kingdom",
                    "number": 2600
                },
                {
                    "label": "Australia",
                    "number": 2435
                },
                {
                    "label": "Italy",
                    "number": 2240
                },
                {
                    "label": "France",
                    "number": 2130
                },
                {
                    "label": "Brazil",
                    "number": 2115
                }
            ],
            "answer": "Canada",
            "answerValue": 11008,
            "question": "Which country, besides the United States, was mentioned with Mexico the most last year?",
            "rowIndex": 26,
            "approved": true,
            "params": {
                "country": "Mexico",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Mexico' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Mexico' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761317762
        },
        {
            "top10": [
                {
                    "label": "Haiti",
                    "number": 4.7822803926503905
                },
                {
                    "label": "Saint Vincent and the Grenadines",
                    "number": 4.123711340206185
                },
                {
                    "label": "Tuvalu",
                    "number": 4.068348250610252
                },
                {
                    "label": "Tanzania",
                    "number": 2.632863460884228
                },
                {
                    "label": "Sao Tome and Principe",
                    "number": 2.2970903522205206
                },
                {
                    "label": "Guatemala",
                    "number": 2.2635215630212056
                },
                {
                    "label": "Canada",
                    "number": 2.1292977055055267
                },
                {
                    "label": "Cape Verde",
                    "number": 1.9890601690701144
                },
                {
                    "label": "Nicaragua",
                    "number": 1.942527965704334
                },
                {
                    "label": "United Kingdom",
                    "number": 1.9301722380732733
                }
            ],
            "answer": "Haiti",
            "answerValue": 4.7822803926503905,
            "question": "Which country appealed the most for economic aid last year?",
            "rowIndex": 9,
            "approved": true,
            "params": {
                "codes": "('0231')",
                "min_events": 1,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0231') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('0231') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "Pakistan",
                    "number": 31150
                },
                {
                    "label": "United States",
                    "number": 13300
                },
                {
                    "label": "China",
                    "number": 9957
                },
                {
                    "label": "United Kingdom",
                    "number": 9108
                },
                {
                    "label": "Bangladesh",
                    "number": 7147
                },
                {
                    "label": "Nepal",
                    "number": 3990
                },
                {
                    "label": "France",
                    "number": 3579
                },
                {
                    "label": "Afghanistan",
                    "number": 3553
                },
                {
                    "label": "Sri Lanka",
                    "number": 2916
                },
                {
                    "label": "Japan",
                    "number": 2638
                }
            ],
            "answer": "Pakistan",
            "answerValue": 31150,
            "question": "Which country was mentioned the most in the news with India last year?",
            "rowIndex": 34,
            "approved": true,
            "params": {
                "country": "India",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'India' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'India' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761318140
        },
        {
            "top10": [
                {
                    "label": "Vermont",
                    "number": 1.2353753360947606
                },
                {
                    "label": "South Dakota",
                    "number": 1.1059371362048893
                },
                {
                    "label": "Delaware",
                    "number": 1.0746466065966769
                },
                {
                    "label": "Wisconsin",
                    "number": 1.0401317500216694
                },
                {
                    "label": "Louisiana",
                    "number": 1.0200492437565951
                },
                {
                    "label": "Indiana",
                    "number": 1.0058602291612
                },
                {
                    "label": "Montana",
                    "number": 0.9758897818599311
                },
                {
                    "label": "Maine",
                    "number": 0.9374409374409375
                },
                {
                    "label": "Nebraska",
                    "number": 0.8673469387755102
                },
                {
                    "label": "New Mexico",
                    "number": 0.8597528210639441
                }
            ],
            "answer": "Vermont",
            "answerValue": 1.2353753360947606,
            "question": "Which state's subreddit talked about beer the most in the past year?\n",
            "rowIndex": 61,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(beer|brewsky|brewery)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(beer|brewsky|brewery)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(beer|brewsky|brewery)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Massachusetts",
                    "number": 6.8561872909699
                },
                {
                    "label": "New Mexico",
                    "number": 3.2240730789897905
                },
                {
                    "label": "Virginia",
                    "number": 2.9239766081871346
                },
                {
                    "label": "Mississippi",
                    "number": 2.7605244996549345
                },
                {
                    "label": "New Jersey",
                    "number": 2.7131133813431587
                },
                {
                    "label": "Hawaii",
                    "number": 2.5666137584005946
                },
                {
                    "label": "Delaware",
                    "number": 2.397288583946433
                },
                {
                    "label": "Montana",
                    "number": 2.152698048220436
                },
                {
                    "label": "Missouri",
                    "number": 2.0570085218924477
                },
                {
                    "label": "Arizona",
                    "number": 2.056325435851587
                }
            ],
            "answer": "Massachusetts",
            "answerValue": 6.8561872909699,
            "question": "Which state's subreddit talked about cats the most in the past month?",
            "rowIndex": 62,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(cat|kitten|kitty|feline)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(cat|kitten|kitty|feline)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(cat|kitten|kitty|feline)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Kentucky",
                    "number": 1.3936486177747316
                },
                {
                    "label": "West Virginia",
                    "number": 1.345291479820628
                },
                {
                    "label": "Illinois",
                    "number": 1.247373949579832
                },
                {
                    "label": "Kansas",
                    "number": 1.1409395973154361
                },
                {
                    "label": "Pennsylvania",
                    "number": 1.1333134506412168
                },
                {
                    "label": "Colorado",
                    "number": 1.0418398448323636
                },
                {
                    "label": "Tennessee",
                    "number": 0.9950248756218906
                },
                {
                    "label": "Nebraska",
                    "number": 0.9693877551020408
                },
                {
                    "label": "Virginia",
                    "number": 0.9320175438596491
                },
                {
                    "label": "Alabama",
                    "number": 0.9230769230769231
                }
            ],
            "answer": "Kentucky",
            "answerValue": 1.3936486177747316,
            "question": "Which state's subreddit mentioned Obama the most in the past year?",
            "rowIndex": 63,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(obama|barack)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(obama|barack)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(obama|barack)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "New Jersey",
                    "number": 0.8424049572935857
                },
                {
                    "label": "Nebraska",
                    "number": 0.8163265306122449
                },
                {
                    "label": "Vermont",
                    "number": 0.7920935978489936
                },
                {
                    "label": "Rhode Island",
                    "number": 0.747780028041751
                },
                {
                    "label": "New York",
                    "number": 0.7222222222222222
                },
                {
                    "label": "Connecticut",
                    "number": 0.6960116423765634
                },
                {
                    "label": "Nevada",
                    "number": 0.5535055350553506
                },
                {
                    "label": "New Mexico",
                    "number": 0.37614185921547555
                },
                {
                    "label": "Wyoming",
                    "number": 0.3460207612456747
                },
                {
                    "label": "Delaware",
                    "number": 0.3058609572621311
                }
            ],
            "answer": "New Jersey",
            "answerValue": 0.8424049572935857,
            "question": "Which state's subreddit mentioned pizza the most in the past year?",
            "rowIndex": 64,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(pizza)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(pizza)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(pizza)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Kentucky",
                    "number": 4.649303175691113
                },
                {
                    "label": "Pennsylvania",
                    "number": 4.4636643801570735
                },
                {
                    "label": "West Virginia",
                    "number": 3.6870951669157948
                },
                {
                    "label": "Michigan",
                    "number": 3.459166343890594
                },
                {
                    "label": "Ohio",
                    "number": 3.2350415115946176
                },
                {
                    "label": "California",
                    "number": 3.143884680010612
                },
                {
                    "label": "Wisconsin",
                    "number": 3.064054780272168
                },
                {
                    "label": "North Carolina",
                    "number": 3.0175510623011395
                },
                {
                    "label": "Virginia",
                    "number": 2.997076023391813
                },
                {
                    "label": "Colorado",
                    "number": 2.942643391521197
                }
            ],
            "answer": "Kentucky",
            "answerValue": 4.649303175691113,
            "question": "Which state's subreddit mentioned Donald Trump the most in the past year?",
            "rowIndex": 67,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(trump|the donald)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(trump|the donald)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(trump|the donald)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Italy",
                    "number": 231
                },
                {
                    "label": "Mexico",
                    "number": 173
                },
                {
                    "label": "Canada",
                    "number": 161
                },
                {
                    "label": "China",
                    "number": 105
                },
                {
                    "label": "Thailand",
                    "number": 105
                },
                {
                    "label": "Switzerland",
                    "number": 97
                },
                {
                    "label": "Germany",
                    "number": 92
                },
                {
                    "label": "France",
                    "number": 91
                },
                {
                    "label": "Vietnam",
                    "number": 80
                },
                {
                    "label": "Iceland",
                    "number": 79
                }
            ],
            "answer": "Italy",
            "answerValue": 231,
            "question": "Which country was discussed the most in /r/travel in the past month?",
            "rowIndex": 59,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "travel"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'travel') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'travel') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 63958245
        },
        {
            "top10": [
                {
                    "label": "Go",
                    "number": 4.368476514178374
                },
                {
                    "label": "Objective-C",
                    "number": 1.6262662572489033
                },
                {
                    "label": "HTML",
                    "number": 1.3640519127990625
                },
                {
                    "label": "Java",
                    "number": 1.2528982853958526
                },
                {
                    "label": "R",
                    "number": 1.0353884224749124
                },
                {
                    "label": "CSS",
                    "number": 0.9755027184587003
                },
                {
                    "label": "TypeScript",
                    "number": 0.8903070469077262
                },
                {
                    "label": "CoffeeScript",
                    "number": 0.8838587382499598
                },
                {
                    "label": "JavaScript",
                    "number": 0.877467919712753
                },
                {
                    "label": "C++",
                    "number": 0.8670021261704894
                }
            ],
            "answer": "Go",
            "answerValue": 4.368476514178374,
            "question": "Which programming language mentions Google the most?",
            "rowIndex": 42,
            "approved": true,
            "params": {
                "min_comments": 50000,
                "per": 100,
                "regex": "(?i)\\b(google)\\b"
            },
            "sql": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(google)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language IS NOT NULL) repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nHAVING\n  total \u003e 50000\nORDER BY\n  per DESC\nLIMIT\n  10 IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(google)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language = 'userInput') repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "GitHub",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 1242016253
        },
        {
            "top10": [
                {
                    "label": "California",
                    "number": 193
                },
                {
                    "label": "Florida",
                    "number": 186
                },
                {
                    "label": "Texas",
                    "number": 153
                },
                {
                    "label": "New York",
                    "number": 47
                },
                {
                    "label": "Alaska",
                    "number": 37
                },
                {
                    "label": "Colorado",
                    "number": 37
                },
                {
                    "label": "Oregon",
                    "number": 36
                },
                {
                    "label": "Michigan",
                    "number": 34
                },
                {
                    "label": "Washington",
                    "number": 31
                },
                {
                    "label": "Alabama",
                    "number": 31
                }
            ],
            "answer": "California",
            "answerValue": 193,
            "question": "Which state was mentioned in /r/WTF the most in the past month?",
            "rowIndex": 81,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "wtf"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.states] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'wtf') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.states]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'wtf') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 64205060
        },
        {
            "top10": [
                {
                    "label": "Washington",
                    "number": 331
                },
                {
                    "label": "Montana",
                    "number": 307
                },
                {
                    "label": "New York",
                    "number": 279
                },
                {
                    "label": "Texas",
                    "number": 264
                },
                {
                    "label": "Minnesota",
                    "number": 200
                },
                {
                    "label": "Arizona",
                    "number": 176
                },
                {
                    "label": "Florida",
                    "number": 169
                },
                {
                    "label": "Alabama",
                    "number": 169
                },
                {
                    "label": "Tennessee",
                    "number": 162
                },
                {
                    "label": "Ohio",
                    "number": 150
                }
            ],
            "answer": "Washington",
            "answerValue": 331,
            "question": "Which state was mentioned in /r/NFL the most in the past month?",
            "rowIndex": 80,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "nfl"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.states] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'nfl') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.states]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'nfl') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 64394251
        },
        {
            "top10": [
                {
                    "label": "Texas",
                    "number": 334
                },
                {
                    "label": "Florida",
                    "number": 252
                },
                {
                    "label": "California",
                    "number": 203
                },
                {
                    "label": "Arizona",
                    "number": 165
                },
                {
                    "label": "New York",
                    "number": 153
                },
                {
                    "label": "Colorado",
                    "number": 118
                },
                {
                    "label": "Ohio",
                    "number": 116
                },
                {
                    "label": "Washington",
                    "number": 99
                },
                {
                    "label": "Michigan",
                    "number": 89
                },
                {
                    "label": "Indiana",
                    "number": 85
                }
            ],
            "answer": "Texas",
            "answerValue": 334,
            "question": "Which state was mentioned the most in /r/funny in the past month?",
            "rowIndex": 79,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "funny"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.states] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'funny') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.states]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'funny') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 64501389
        },
        {
            "top10": [
                {
                    "label": "Texas",
                    "number": 63
                },
                {
                    "label": "California",
                    "number": 17
                },
                {
                    "label": "Florida",
                    "number": 12
                },
                {
                    "label": "Ohio",
                    "number": 5
                },
                {
                    "label": "New York",
                    "number": 5
                },
                {
                    "label": "Washington",
                    "number": 4
                },
                {
                    "label": "Arizona",
                    "number": 4
                },
                {
                    "label": "New Jersey",
                    "number": 3
                },
                {
                    "label": "Hawaii",
                    "number": 2
                },
                {
                    "label": "Iowa",
                    "number": 2
                }
            ],
            "answer": "Texas",
            "answerValue": 63,
            "question": "Which state was mentioned the most in /r/fitness in the past month?",
            "rowIndex": 82,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "fitness"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.states] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'fitness') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.states]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'fitness') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 64084541
        },
        {
            "top10": [
                {
                    "label": "California",
                    "number": 307
                },
                {
                    "label": "Texas",
                    "number": 292
                },
                {
                    "label": "New York",
                    "number": 265
                },
                {
                    "label": "Florida",
                    "number": 249
                },
                {
                    "label": "Washington",
                    "number": 231
                },
                {
                    "label": "Arizona",
                    "number": 226
                },
                {
                    "label": "Michigan",
                    "number": 119
                },
                {
                    "label": "Nebraska",
                    "number": 108
                },
                {
                    "label": "Kansas",
                    "number": 103
                },
                {
                    "label": "Ohio",
                    "number": 95
                }
            ],
            "answer": "California",
            "answerValue": 307,
            "question": "Which state was most mentioned in /r/Pics in the past month?",
            "rowIndex": 91,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "pics"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.states] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'pics') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.states]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'pics') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 64524886
        },
        {
            "top10": [
                {
                    "label": "Canada",
                    "number": 94
                },
                {
                    "label": "Australia",
                    "number": 71
                },
                {
                    "label": "Switzerland",
                    "number": 58
                },
                {
                    "label": "Iceland",
                    "number": 39
                },
                {
                    "label": "South Africa",
                    "number": 37
                },
                {
                    "label": "Mexico",
                    "number": 33
                },
                {
                    "label": "Norway",
                    "number": 31
                },
                {
                    "label": "Nepal",
                    "number": 29
                },
                {
                    "label": "Croatia",
                    "number": 29
                },
                {
                    "label": "New Zealand",
                    "number": 28
                }
            ],
            "answer": "Canada",
            "answerValue": 94,
            "question": "Which country was mentioned the most in /r/EarthPorn in the past month?",
            "rowIndex": 102,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "earthporn"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'earthporn') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'earthporn') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 63943043
        },
        {
            "top10": [
                {
                    "label": "New York",
                    "number": 59
                },
                {
                    "label": "Washington",
                    "number": 53
                },
                {
                    "label": "California",
                    "number": 45
                },
                {
                    "label": "Florida",
                    "number": 24
                },
                {
                    "label": "Oregon",
                    "number": 24
                },
                {
                    "label": "Georgia",
                    "number": 22
                },
                {
                    "label": "Montana",
                    "number": 21
                },
                {
                    "label": "Utah",
                    "number": 21
                },
                {
                    "label": "Colorado",
                    "number": 20
                },
                {
                    "label": "Hawaii",
                    "number": 19
                }
            ],
            "answer": "New York",
            "answerValue": 59,
            "question": "Which state was mentioned the most in /r/travel in the past month?",
            "rowIndex": 100,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "travel",
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.states]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'travel') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.states]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'travel') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6590606720
        },
        {
            "top10": [
                {
                    "label": "London",
                    "number": 9
                },
                {
                    "label": "Chicago",
                    "number": 7
                },
                {
                    "label": "Oxford",
                    "number": 4
                },
                {
                    "label": "Geneva",
                    "number": 4
                },
                {
                    "label": "Vancouver",
                    "number": 4
                },
                {
                    "label": "San Diego",
                    "number": 4
                },
                {
                    "label": "Denver",
                    "number": 4
                },
                {
                    "label": "Toronto",
                    "number": 4
                },
                {
                    "label": "Boston",
                    "number": 3
                },
                {
                    "label": "Melbourne",
                    "number": 3
                }
            ],
            "answer": "London",
            "answerValue": 9,
            "question": "Which city was most mentioned in /r/fitness in the past month?",
            "rowIndex": 89,
            "approved": true,
            "params": {
                "freebase_tag": "cities",
                "subreddit": "fitness",
                "top_wiki": 50
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    50 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'fitness') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    50 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'fitness') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6957194663
        },
        {
            "top10": [
                {
                    "label": "Batman",
                    "number": 4064
                },
                {
                    "label": "Wonder Woman",
                    "number": 3136
                },
                {
                    "label": "Superman",
                    "number": 2225
                },
                {
                    "label": "Spider-Man",
                    "number": 1617
                },
                {
                    "label": "Venom",
                    "number": 1092
                },
                {
                    "label": "Iron Man",
                    "number": 1064
                },
                {
                    "label": "Thor",
                    "number": 800
                },
                {
                    "label": "Captain America",
                    "number": 630
                },
                {
                    "label": "Vision",
                    "number": 616
                },
                {
                    "label": "Deadpool",
                    "number": 574
                }
            ],
            "answer": "Batman",
            "answerValue": 4064,
            "question": "Which superhero was mentioned the most in /r/movies in the past month?",
            "rowIndex": 60,
            "approved": true,
            "params": {
                "freebase_tag": "superheroes",
                "subreddit": "movies",
                "top_wiki": 100
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.superheroes]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    100 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'movies') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.superheroes]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    100 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'movies') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6620130011
        },
        {
            "top10": [
                {
                    "label": "Ronaldo",
                    "number": 193
                },
                {
                    "label": "Mike Tyson",
                    "number": 134
                },
                {
                    "label": "Michael Jordan",
                    "number": 48
                },
                {
                    "label": "LeBron James",
                    "number": 37
                },
                {
                    "label": "Kevin Durant",
                    "number": 29
                },
                {
                    "label": "Tim Tebow",
                    "number": 28
                },
                {
                    "label": "Tom Brady",
                    "number": 23
                },
                {
                    "label": "Muhammad Ali",
                    "number": 22
                },
                {
                    "label": "Usain Bolt",
                    "number": 18
                },
                {
                    "label": "Chris Paul",
                    "number": 16
                }
            ],
            "answer": "Ronaldo",
            "answerValue": 193,
            "question": "Who was the most popular athlete in /r/sports in the past month?",
            "rowIndex": 77,
            "approved": true,
            "params": {
                "freebase_tag": "athletes",
                "num_common_words": 500,
                "subreddit": "sports",
                "substring": true,
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.athletes]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'sports') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.athletes]\n      WHERE\n        name = 'userInput'\n      OR name CONTAINS CONCAT(' ', 'userInput')\n      OR name CONTAINS CONCAT('userInput', ' ')\n) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'sports') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 8630035712
        },
        {
            "top10": [
                {
                    "label": "The Beatles",
                    "number": 255
                },
                {
                    "label": "Kiss",
                    "number": 240
                },
                {
                    "label": "Pink Floyd",
                    "number": 229
                },
                {
                    "label": "Foo Fighters",
                    "number": 210
                },
                {
                    "label": "Yes",
                    "number": 205
                },
                {
                    "label": "Radiohead",
                    "number": 178
                },
                {
                    "label": "Prince",
                    "number": 163
                },
                {
                    "label": "Search",
                    "number": 142
                },
                {
                    "label": "Katy Perry",
                    "number": 137
                },
                {
                    "label": "Roger Waters",
                    "number": 136
                }
            ],
            "answer": "The Beatles",
            "answerValue": 255,
            "question": "What musical group was talked about in /r/music the most in the past month?",
            "rowIndex": 75,
            "approved": true,
            "params": {
                "freebase_tag": "musicians",
                "subreddit": "music",
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.musicians]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'music') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.musicians]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'music') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 7124234128
        },
        {
            "top10": [
                {
                    "label": "San Francisco",
                    "number": 1381
                },
                {
                    "label": "New York City",
                    "number": 1219
                },
                {
                    "label": "Portland",
                    "number": 472
                },
                {
                    "label": "Detroit",
                    "number": 374
                },
                {
                    "label": "Seattle",
                    "number": 254
                },
                {
                    "label": "Washington, D.C.",
                    "number": 215
                },
                {
                    "label": "Dallas",
                    "number": 186
                },
                {
                    "label": "Orlando",
                    "number": 185
                },
                {
                    "label": "Houston",
                    "number": 182
                },
                {
                    "label": "Bury",
                    "number": 178
                }
            ],
            "answer": "San Francisco",
            "answerValue": 1381,
            "question": "Which city was mentioned the most in /r/news in the past month?",
            "rowIndex": 99,
            "approved": true,
            "params": {
                "freebase_tag": "cities",
                "num_common_words": 2000,
                "subreddit": "news",
                "top_wiki": 75
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    topic_wiki.title AS title,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name AS name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name,\n    title\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nJOIN (\n  SELECT\n    sub,\n    obj AS alias\n  FROM\n    [fh-bigquery:freebase20140119.triples_lang_en]\n  WHERE\n    (pred = '/common/topic/alias'\n      OR pred = '/type/object/name')\n    AND obj NOT IN (\n    SELECT\n      word\n    FROM\n      [words.top10000]\n    LIMIT\n      2000)) aliases\nON\n  aliases.sub = pop_topic.mid\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'news') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', aliases.alias, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    topic_wiki.title AS title,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name AS name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name,\n    title\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nJOIN (\n  SELECT\n    sub,\n    obj AS alias,\n    CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n    SUM(input) OVER (PARTITION BY sub) AS input_alias\n  FROM\n    [fh-bigquery:freebase20140119.triples_lang_en]\n  WHERE\n    (pred = '/common/topic/alias'\n      OR pred = '/type/object/name')\n    AND obj NOT IN (\n    SELECT\n      word\n    FROM\n      [words.top10000]\n    LIMIT\n      2000)) aliases\nON\n  aliases.sub = pop_topic.mid\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'news') comments\nWHERE\n  aliases.input_alias \u003e 0\n  AND comments.body CONTAINS CONCAT(' ', aliases.alias, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 7096223336
        },
        {
            "top10": [
                {
                    "label": "Germany",
                    "number": 732
                },
                {
                    "label": "Japan",
                    "number": 537
                },
                {
                    "label": "Russia",
                    "number": 480
                },
                {
                    "label": "China",
                    "number": 473
                },
                {
                    "label": "France",
                    "number": 359
                },
                {
                    "label": "Vietnam",
                    "number": 263
                },
                {
                    "label": "England",
                    "number": 211
                },
                {
                    "label": "Roman Empire",
                    "number": 185
                },
                {
                    "label": "Canada",
                    "number": 176
                },
                {
                    "label": "India",
                    "number": 156
                }
            ],
            "answer": "Germany",
            "answerValue": 732,
            "question": "Which country was mentioned the most in /r/history in the past month?",
            "rowIndex": 105,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "history"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'history') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'history') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 63965866
        },
        {
            "top10": [
                {
                    "label": "Houston",
                    "number": 63
                },
                {
                    "label": "Chicago",
                    "number": 61
                },
                {
                    "label": "London",
                    "number": 30
                },
                {
                    "label": "Dallas",
                    "number": 28
                },
                {
                    "label": "Detroit",
                    "number": 23
                },
                {
                    "label": "Los Angeles",
                    "number": 21
                },
                {
                    "label": "Paris",
                    "number": 21
                },
                {
                    "label": "Miami",
                    "number": 21
                },
                {
                    "label": "Denver",
                    "number": 19
                },
                {
                    "label": "Atlanta",
                    "number": 19
                }
            ],
            "answer": "Houston",
            "answerValue": 63,
            "question": "Which city was mentioned the most in /r/WTF in the past month?",
            "rowIndex": 104,
            "approved": true,
            "params": {
                "freebase_tag": "cities",
                "subreddit": "wtf",
                "top_wiki": 100
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    100 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'wtf') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    100 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'wtf') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6957317307
        },
        {
            "top10": [
                {
                    "label": "Paris",
                    "number": 92
                },
                {
                    "label": "London",
                    "number": 52
                },
                {
                    "label": "Seattle",
                    "number": 24
                },
                {
                    "label": "Chicago",
                    "number": 22
                },
                {
                    "label": "Detroit",
                    "number": 13
                },
                {
                    "label": "Boston",
                    "number": 13
                },
                {
                    "label": "Toronto",
                    "number": 11
                },
                {
                    "label": "Denver",
                    "number": 10
                },
                {
                    "label": "Los Angeles",
                    "number": 7
                },
                {
                    "label": "Oxford",
                    "number": 7
                }
            ],
            "answer": "Paris",
            "answerValue": 92,
            "question": "Which U.S. city was mentioned the most in /r/UpliftingNews in the past month?",
            "rowIndex": 107,
            "approved": true,
            "params": {
                "freebase_tag": "cities",
                "subreddit": "upliftingnews",
                "top_wiki": 75
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    75 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'upliftingnews') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cities]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    75 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'upliftingnews') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6957052420
        },
        {
            "top10": [
                {
                    "label": "California",
                    "number": 1973
                },
                {
                    "label": "Texas",
                    "number": 1580
                },
                {
                    "label": "New York",
                    "number": 783
                },
                {
                    "label": "Washington",
                    "number": 661
                },
                {
                    "label": "Florida",
                    "number": 615
                },
                {
                    "label": "Illinois",
                    "number": 425
                },
                {
                    "label": "Michigan",
                    "number": 373
                },
                {
                    "label": "Colorado",
                    "number": 361
                },
                {
                    "label": "Virginia",
                    "number": 359
                },
                {
                    "label": "Kansas",
                    "number": 293
                }
            ],
            "answer": "California",
            "answerValue": 1973,
            "question": "Which state was mentioned the most in /r/news in the past month?",
            "rowIndex": 98,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "news",
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.states]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'news') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.states]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'news') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6591143500
        },
        {
            "top10": [
                {
                    "label": "Germany",
                    "number": 177
                },
                {
                    "label": "Canada",
                    "number": 156
                },
                {
                    "label": "China",
                    "number": 132
                },
                {
                    "label": "India",
                    "number": 123
                },
                {
                    "label": "Saudi Arabia",
                    "number": 66
                },
                {
                    "label": "Iraq",
                    "number": 48
                },
                {
                    "label": "Turkey",
                    "number": 45
                },
                {
                    "label": "Australia",
                    "number": 40
                },
                {
                    "label": "France",
                    "number": 39
                },
                {
                    "label": "Russia",
                    "number": 35
                }
            ],
            "answer": "Germany",
            "answerValue": 177,
            "question": "Which country was mentioned the most in /r/UpliftingNews in the past month?",
            "rowIndex": 108,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "upliftingnews",
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.countries]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'upliftingnews') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.countries]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'upliftingnews') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6623428594
        },
        {
            "top10": [
                {
                    "label": "New England Patriots",
                    "number": 197862
                },
                {
                    "label": "Green Bay Packers",
                    "number": 155478
                },
                {
                    "label": "Dallas Cowboys",
                    "number": 143856
                },
                {
                    "label": "Oakland Raiders",
                    "number": 117104
                },
                {
                    "label": "Washington Redskins",
                    "number": 102050
                },
                {
                    "label": "Miami Dolphins",
                    "number": 92441
                },
                {
                    "label": "Arizona Cardinals",
                    "number": 89720
                },
                {
                    "label": "Chicago Bears",
                    "number": 89439
                },
                {
                    "label": "Cleveland Browns",
                    "number": 85980
                },
                {
                    "label": "New York Giants",
                    "number": 84483
                }
            ],
            "answer": "New England Patriots",
            "answerValue": 197862,
            "question": "Which football team had the most popular page in the past month?",
            "rowIndex": 115,
            "approved": true,
            "params": {
                "freebase_tag": "football_teams",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.football_teams]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.football_teams]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6528064605
        },
        {
            "top10": [
                {
                    "label": "Labrador Retriever",
                    "number": 360766
                },
                {
                    "label": "Golden Retriever",
                    "number": 264967
                },
                {
                    "label": "Jack Russell Terrier",
                    "number": 225587
                },
                {
                    "label": "Siberian Husky",
                    "number": 157052
                },
                {
                    "label": "Pit bull",
                    "number": 140983
                },
                {
                    "label": "Yorkshire Terrier",
                    "number": 139413
                },
                {
                    "label": "Shiba Inu",
                    "number": 138792
                },
                {
                    "label": "Akita",
                    "number": 132854
                },
                {
                    "label": "American Pit Bull Terrier",
                    "number": 127045
                },
                {
                    "label": "Cane Corso",
                    "number": 121852
                }
            ],
            "answer": "Labrador Retriever",
            "answerValue": 360766,
            "question": "Which breed of dog had the most popular page in the past month?",
            "rowIndex": 117,
            "approved": true,
            "params": {
                "freebase_tag": "dog_breeds",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.dog_breeds]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.dog_breeds]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6532017182
        },
        {
            "top10": [
                {
                    "label": "California",
                    "number": 4618043
                },
                {
                    "label": "New York",
                    "number": 1108495
                },
                {
                    "label": "Minnesota",
                    "number": 568060
                },
                {
                    "label": "Alaska",
                    "number": 530115
                },
                {
                    "label": "New Jersey",
                    "number": 471118
                },
                {
                    "label": "Texas",
                    "number": 416742
                },
                {
                    "label": "Nebraska",
                    "number": 385825
                },
                {
                    "label": "Hawaii",
                    "number": 379569
                },
                {
                    "label": "Rhode Island",
                    "number": 345172
                },
                {
                    "label": "Oregon",
                    "number": 344064
                }
            ],
            "answer": "California",
            "answerValue": 4618043,
            "question": "Which U.S. state had the most popular page in the past month?",
            "rowIndex": 120,
            "approved": true,
            "params": {
                "freebase_tag": "states"
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.states]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.states]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name = 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6526653520
        },
        {
            "top10": [
                {
                    "label": "Red Hot Chili Peppers",
                    "number": 1980876
                },
                {
                    "label": "The Beatles",
                    "number": 1503079
                },
                {
                    "label": "Pink Floyd",
                    "number": 1371795
                },
                {
                    "label": "One Direction",
                    "number": 1096087
                },
                {
                    "label": "Metallica",
                    "number": 1078239
                },
                {
                    "label": "System of a Down",
                    "number": 1072922
                },
                {
                    "label": "Linkin Park",
                    "number": 1012896
                },
                {
                    "label": "Led Zeppelin",
                    "number": 974349
                },
                {
                    "label": "The Rolling Stones",
                    "number": 954012
                },
                {
                    "label": "Black Sabbath",
                    "number": 942670
                }
            ],
            "answer": "Red Hot Chili Peppers",
            "answerValue": 1980876,
            "question": "What band had the most popular page in the past month?",
            "rowIndex": 118,
            "approved": true,
            "params": {
                "freebase_tag": "bands",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.bands]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.bands]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6817722440
        },
        {
            "top10": [
                {
                    "label": "Rhode Island",
                    "number": 0.5764137716155164
                },
                {
                    "label": "Hawaii",
                    "number": 0.4998142582148526
                },
                {
                    "label": "New Hampshire",
                    "number": 0.4521233650896173
                },
                {
                    "label": "New Mexico",
                    "number": 0.42987641053197206
                },
                {
                    "label": "Wyoming",
                    "number": 0.3844675124951942
                },
                {
                    "label": "Mississippi",
                    "number": 0.3795721187025535
                },
                {
                    "label": "Vermont",
                    "number": 0.37787951457016206
                },
                {
                    "label": "Maine",
                    "number": 0.343980343980344
                },
                {
                    "label": "Connecticut",
                    "number": 0.3079324235969038
                },
                {
                    "label": "Oregon",
                    "number": 0.30225409836065575
                }
            ],
            "answer": "Rhode Island",
            "answerValue": 0.5764137716155164,
            "question": "In the last year, which state's subreddit mentioned coffee the most?",
            "rowIndex": 152,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(coffee|latte|espresso)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(coffee|latte|espresso)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(coffee|latte|espresso)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Basketball",
                    "number": 414887
                },
                {
                    "label": "Tennis",
                    "number": 348103
                },
                {
                    "label": "Taekwondo",
                    "number": 306235
                },
                {
                    "label": "Football",
                    "number": 297755
                },
                {
                    "label": "Judo",
                    "number": 282054
                },
                {
                    "label": "Softball",
                    "number": 268594
                },
                {
                    "label": "Muay Thai",
                    "number": 259621
                },
                {
                    "label": "Yoga",
                    "number": 249182
                },
                {
                    "label": "American football",
                    "number": 242648
                },
                {
                    "label": "Golf",
                    "number": 236067
                }
            ],
            "answer": "Basketball",
            "answerValue": 414887,
            "question": "Which sport had the most popular page in the past month?",
            "rowIndex": 121,
            "approved": true,
            "params": {
                "freebase_tag": "sports",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.sports]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.sports]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6533561768
        },
        {
            "top10": [
                {
                    "label": "South Carolina",
                    "number": 49.18839153959666
                },
                {
                    "label": "Texas",
                    "number": 6.49308486461918
                },
                {
                    "label": "Wisconsin",
                    "number": 4.3338822917569555
                },
                {
                    "label": "Maine",
                    "number": 3.78000378000378
                },
                {
                    "label": "Michigan",
                    "number": 2.9794714417662305
                },
                {
                    "label": "Florida"
                },
                {
                    "label": "Nebraska"
                },
                {
                    "label": "Illinois"
                },
                {
                    "label": "California"
                },
                {
                    "label": "Arizona"
                }
            ],
            "answer": "South Carolina",
            "answerValue": 49.18839153959666,
            "question": "Which state's subreddit mentioned Velveeta the most in the past year?",
            "rowIndex": 159,
            "approved": true,
            "params": {
                "per": 100000,
                "regex": "(?i)\\b(velveeta)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(velveeta)\\b') THEN 1 ELSE 0 END) * 100000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(velveeta)\\b') THEN 1 ELSE 0 END) * 100000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments per 100,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Texas",
                    "number": 93
                },
                {
                    "label": "California",
                    "number": 62
                },
                {
                    "label": "New York",
                    "number": 53
                },
                {
                    "label": "Georgia",
                    "number": 31
                },
                {
                    "label": "Louisiana",
                    "number": 30
                },
                {
                    "label": "Alaska",
                    "number": 28
                },
                {
                    "label": "Florida",
                    "number": 17
                },
                {
                    "label": "Maryland",
                    "number": 12
                },
                {
                    "label": "Maine",
                    "number": 12
                },
                {
                    "label": "Kansas",
                    "number": 11
                }
            ],
            "answer": "Texas",
            "answerValue": 93,
            "question": "Which state was mentioned the most in /r/food in the past month?",
            "rowIndex": 155,
            "approved": true,
            "params": {
                "freebase_tag": "states",
                "subreddit": "food"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.states] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'food') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.states]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'food') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 63982710
        },
        {
            "top10": [
                {
                    "label": "Ghostbusters",
                    "number": 863715
                },
                {
                    "label": "Back to the Future",
                    "number": 560691
                },
                {
                    "label": "Indiana Jones and the Raiders of the Lost Ark",
                    "number": 288407
                },
                {
                    "label": "Blade Runner",
                    "number": 251407
                },
                {
                    "label": "Dead Poets Society",
                    "number": 245562
                },
                {
                    "label": "Full Metal Jacket",
                    "number": 237730
                },
                {
                    "label": "Stand by Me",
                    "number": 226189
                },
                {
                    "label": "The Terminator",
                    "number": 200613
                },
                {
                    "label": "Dirty Dancing",
                    "number": 194295
                },
                {
                    "label": "My Neighbor Totoro",
                    "number": 193448
                }
            ],
            "answer": "Ghostbusters",
            "answerValue": 863715,
            "question": "Which '80s film had the most popular page in the past month?",
            "rowIndex": 126,
            "approved": true,
            "params": {
                "freebase_tag": "80s_movies",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.80s_movies]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.80s_movies]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6625096450
        },
        {
            "top10": [
                {
                    "label": "Los Angeles",
                    "number": 1.9140366190961962
                },
                {
                    "label": "Seattle",
                    "number": 1.6669921663086171
                },
                {
                    "label": "Atlanta",
                    "number": 1.6514469731120247
                },
                {
                    "label": "Denver",
                    "number": 1.5802712700369914
                },
                {
                    "label": "Pittsburgh",
                    "number": 1.5169419992764983
                },
                {
                    "label": "San Francisco",
                    "number": 1.3772125654164602
                },
                {
                    "label": "San Diego",
                    "number": 1.337967539300405
                },
                {
                    "label": "Portland",
                    "number": 1.3200388500016746
                },
                {
                    "label": "Boston",
                    "number": 1.3129640510656482
                },
                {
                    "label": "Austin",
                    "number": 1.2677119429100765
                }
            ],
            "answer": "Los Angeles",
            "answerValue": 1.9140366190961962,
            "question": "Which city's subreddit discussed traffic the most?",
            "rowIndex": 153,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(traffic)\\b"
            },
            "sql": "\nSELECT\n cities.city,\n SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(traffic)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n SELECT\n   body,\n   subreddit\n FROM\n   TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n [subreddits.cities] cities\nON\n comments.subreddit = cities.subreddit\nGROUP BY\n cities.city\nORDER BY\n per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  cities.city,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(traffic)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    body,\n    subreddit\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n  [subreddits.cities] cities\nON\n  comments.subreddit = cities.subreddit\nJOIN\n  [fh-bigquery:freebase20140119.triples_lang_en] aliases\nON\n  aliases.sub = cities.mid\nWHERE\n  (aliases.pred = '/common/topic/alias'\n    OR aliases.pred = '/type/object/name')\n  AND aliases.obj = 'userInput'\nGROUP BY\n  cities.city\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 532396361
        },
        {
            "top10": [
                {
                    "label": "Virginia",
                    "number": 1.5533625730994152
                },
                {
                    "label": "South Dakota",
                    "number": 1.280558789289872
                },
                {
                    "label": "Mississippi",
                    "number": 1.2767425810904072
                },
                {
                    "label": "Kentucky",
                    "number": 1.256568425862463
                },
                {
                    "label": "West Virginia",
                    "number": 1.14598903836572
                },
                {
                    "label": "Pennsylvania",
                    "number": 1.0537826821751666
                },
                {
                    "label": "Illinois",
                    "number": 0.8534663865546218
                },
                {
                    "label": "Wisconsin",
                    "number": 0.8104359885585507
                },
                {
                    "label": "North Carolina",
                    "number": 0.7424133565978993
                },
                {
                    "label": "Ohio",
                    "number": 0.71571714858288
                }
            ],
            "answer": "Virginia",
            "answerValue": 1.5533625730994152,
            "question": "Which state's subreddit mentioned Hillary Clinton the most in the past year?",
            "rowIndex": 167,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(hillary|clinton)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(hillary|clinton)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(hillary|clinton)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Wyoming",
                    "number": 1.1534025374855825
                },
                {
                    "label": "Utah",
                    "number": 1.0809141445336627
                },
                {
                    "label": "West Virginia",
                    "number": 0.7473841554559043
                },
                {
                    "label": "Washington",
                    "number": 0.5941770647653001
                },
                {
                    "label": "Idaho",
                    "number": 0.5685048322910745
                },
                {
                    "label": "New Mexico",
                    "number": 0.537345513164965
                },
                {
                    "label": "Arizona",
                    "number": 0.4470272686633885
                },
                {
                    "label": "Tennessee",
                    "number": 0.3827018752391887
                },
                {
                    "label": "Maine",
                    "number": 0.378000378000378
                },
                {
                    "label": "Oregon",
                    "number": 0.3073770491803279
                }
            ],
            "answer": "Wyoming",
            "answerValue": 1.1534025374855825,
            "question": "Which state's subreddit mentioned rock climbing the most in the past year?",
            "rowIndex": 168,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(rock climbing|bouldering)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(rock climbing|bouldering)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(rock climbing|bouldering)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Germany",
                    "number": 5109
                },
                {
                    "label": "Russia",
                    "number": 3979
                },
                {
                    "label": "France",
                    "number": 2844
                },
                {
                    "label": "Poland",
                    "number": 2368
                },
                {
                    "label": "Greece",
                    "number": 1723
                },
                {
                    "label": "Turkey",
                    "number": 1691
                },
                {
                    "label": "Italy",
                    "number": 1402
                },
                {
                    "label": "Spain",
                    "number": 1298
                },
                {
                    "label": "Ukraine",
                    "number": 1224
                },
                {
                    "label": "China",
                    "number": 1148
                }
            ],
            "answer": "Germany",
            "answerValue": 5109,
            "question": "Which country was mentioned the most in /r/europe in the past month? ",
            "rowIndex": 69,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "europe"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'europe') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'europe') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 64087380
        },
        {
            "top10": [
                {
                    "label": "China",
                    "number": 192
                },
                {
                    "label": "Russia",
                    "number": 112
                },
                {
                    "label": "Canada",
                    "number": 104
                },
                {
                    "label": "Australia",
                    "number": 95
                },
                {
                    "label": "Mexico",
                    "number": 78
                },
                {
                    "label": "Germany",
                    "number": 76
                },
                {
                    "label": "Japan",
                    "number": 53
                },
                {
                    "label": "Brazil",
                    "number": 45
                },
                {
                    "label": "Jersey",
                    "number": 42
                },
                {
                    "label": "England",
                    "number": 38
                }
            ],
            "answer": "China",
            "answerValue": 192,
            "question": "Which country was mentioned the most in /r/WTF in the past month?",
            "rowIndex": 103,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "wtf"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'wtf') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'wtf') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 64206844
        },
        {
            "top10": [
                {
                    "label": "New Mexico",
                    "number": 2.14938205265986
                },
                {
                    "label": "Hawaii",
                    "number": 1.756104150484617
                },
                {
                    "label": "South Carolina",
                    "number": 1.4756517461878997
                },
                {
                    "label": "Rhode Island",
                    "number": 1.4020875525782832
                },
                {
                    "label": "Vermont",
                    "number": 1.090037061260083
                },
                {
                    "label": "Nebraska",
                    "number": 1.0204081632653061
                },
                {
                    "label": "Connecticut",
                    "number": 1.0123805707295468
                },
                {
                    "label": "New Jersey",
                    "number": 0.9378663540445487
                },
                {
                    "label": "Delaware",
                    "number": 0.7439861122592378
                },
                {
                    "label": "Indiana",
                    "number": 0.6997288550686609
                }
            ],
            "answer": "New Mexico",
            "answerValue": 2.14938205265986,
            "question": "Which state's subreddit talked about sushi the most in the past year?",
            "rowIndex": 170,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(sushi)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(sushi)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(sushi)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Maine",
                    "number": 2.041202041202041
                },
                {
                    "label": "Connecticut",
                    "number": 1.7083922131061102
                },
                {
                    "label": "Massachusetts",
                    "number": 1.3377926421404682
                },
                {
                    "label": "South Dakota",
                    "number": 1.1641443538998837
                },
                {
                    "label": "New Jersey",
                    "number": 1.0550996483001172
                },
                {
                    "label": "West Virginia",
                    "number": 0.9965122072745392
                },
                {
                    "label": "Washington",
                    "number": 0.8912655971479501
                },
                {
                    "label": "Oregon",
                    "number": 0.8709016393442623
                },
                {
                    "label": "Rhode Island",
                    "number": 0.7789375292101574
                },
                {
                    "label": "Hawaii",
                    "number": 0.7767383742528114
                }
            ],
            "answer": "Maine",
            "answerValue": 2.041202041202041,
            "question": "Which state's subreddit discussed donuts the most in the past year?",
            "rowIndex": 172,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(donut|donuts|donut holes)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(donut|donuts|donut holes)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(donut|donuts|donut holes)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Tennessee",
                    "number": 1.3394565633371605
                },
                {
                    "label": "Vermont",
                    "number": 0.7993605115907274
                },
                {
                    "label": "Delaware",
                    "number": 0.5786558650905184
                },
                {
                    "label": "Alaska",
                    "number": 0.501037864147162
                },
                {
                    "label": "Maine",
                    "number": 0.4914004914004914
                },
                {
                    "label": "Indiana",
                    "number": 0.34986442753433045
                },
                {
                    "label": "Mississippi",
                    "number": 0.3450655624568668
                },
                {
                    "label": "Rhode Island",
                    "number": 0.31157501168406293
                },
                {
                    "label": "Oregon",
                    "number": 0.3073770491803279
                },
                {
                    "label": "Washington",
                    "number": 0.29708853238265004
                }
            ],
            "answer": "Tennessee",
            "answerValue": 1.3394565633371605,
            "question": "Which state's subreddit mentioned knitting the most in the past year?",
            "rowIndex": 171,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(knitting|knit|crochet|yarn)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(knitting|knit|crochet|yarn)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(knitting|knit|crochet|yarn)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "California",
                    "number": 2.4172390413583704
                },
                {
                    "label": "Rhode Island",
                    "number": 2.336812587630472
                },
                {
                    "label": "Texas",
                    "number": 2.110252581001234
                },
                {
                    "label": "Connecticut",
                    "number": 2.045852403349292
                },
                {
                    "label": "Nevada",
                    "number": 1.845018450184502
                },
                {
                    "label": "New Mexico",
                    "number": 1.6120365394948952
                },
                {
                    "label": "Arizona",
                    "number": 1.5198927134555207
                },
                {
                    "label": "Massachusetts",
                    "number": 1.5050167224080269
                },
                {
                    "label": "Colorado",
                    "number": 1.4408423385979496
                },
                {
                    "label": "Maine",
                    "number": 1.2852012852012853
                }
            ],
            "answer": "California",
            "answerValue": 2.4172390413583704,
            "question": "On which state's subreddit could you spot the most UFOs in the past year?",
            "rowIndex": 175,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(ufos?|aliens|alien)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(ufos?|aliens|alien)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(ufos?|aliens|alien)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "New York",
                    "number": 5.555555555555555
                },
                {
                    "label": "West Virginia",
                    "number": 2.4912805181863478
                },
                {
                    "label": "Alaska",
                    "number": 2.1473051320592655
                },
                {
                    "label": "Colorado",
                    "number": 1.6625103906899419
                },
                {
                    "label": "Montana",
                    "number": 1.4351320321469576
                },
                {
                    "label": "Florida",
                    "number": 1.344357061235464
                },
                {
                    "label": "Minnesota",
                    "number": 1.0564496249603832
                },
                {
                    "label": "Hawaii",
                    "number": 1.0131370098949715
                },
                {
                    "label": "Ohio",
                    "number": 0.9542895314438401
                },
                {
                    "label": "Michigan",
                    "number": 0.8938414325298693
                }
            ],
            "answer": "New York",
            "answerValue": 5.555555555555555,
            "question": "Which state's subreddit mentioned insomnia the most in the past year?",
            "rowIndex": 177,
            "approved": true,
            "params": {
                "per": 10000,
                "regex": "(?i)\\b(insomniac?)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(insomniac?)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(insomniac?)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Opera",
                    "number": 511448
                },
                {
                    "label": "Hip hop music",
                    "number": 301750
                },
                {
                    "label": "K-pop",
                    "number": 256400
                },
                {
                    "label": "Rock and roll",
                    "number": 253757
                },
                {
                    "label": "Heavy metal",
                    "number": 241816
                },
                {
                    "label": "Jazz",
                    "number": 230479
                },
                {
                    "label": "Punk rock",
                    "number": 224008
                },
                {
                    "label": "Rhythm and blues",
                    "number": 205417
                },
                {
                    "label": "Latin Language",
                    "number": 189538
                },
                {
                    "label": "Dance",
                    "number": 188308
                }
            ],
            "answer": "Opera",
            "answerValue": 511448,
            "question": "What music genre had the most popular page in the past month?",
            "rowIndex": 131,
            "approved": true,
            "params": {
                "freebase_tag": "music_genres",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.music_genres]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.music_genres]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6554281758
        },
        {
            "top10": [
                {
                    "label": "Missouri",
                    "number": 5.877167205406994
                },
                {
                    "label": "Minnesota",
                    "number": 5.2822481248019155
                },
                {
                    "label": "Illinois",
                    "number": 3.939075630252101
                },
                {
                    "label": "Indiana",
                    "number": 3.4986442753433047
                },
                {
                    "label": "Mississippi",
                    "number": 3.450655624568668
                },
                {
                    "label": "Arkansas",
                    "number": 3.2599837000814995
                },
                {
                    "label": "South Carolina",
                    "number": 2.459419576979833
                },
                {
                    "label": "Michigan",
                    "number": 2.3835771534129844
                },
                {
                    "label": "Florida",
                    "number": 2.0165355918531964
                },
                {
                    "label": "Oklahoma",
                    "number": 1.982848361671541
                }
            ],
            "answer": "Missouri",
            "answerValue": 5.877167205406994,
            "question": "Which state's subreddit brought up calories the most in the past year?",
            "rowIndex": 181,
            "approved": true,
            "params": {
                "per": 10000,
                "regex": "(?i)\\b(calories)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(calories)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(calories)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "New Jersey",
                    "number": 4.019427231619495
                },
                {
                    "label": "Wyoming",
                    "number": 3.8446751249519417
                },
                {
                    "label": "Illinois",
                    "number": 2.6260504201680672
                },
                {
                    "label": "Louisiana",
                    "number": 1.7587055926837847
                },
                {
                    "label": "Delaware",
                    "number": 1.6533024716871951
                },
                {
                    "label": "Vermont",
                    "number": 1.4533827483467772
                },
                {
                    "label": "Kentucky",
                    "number": 1.142334932602239
                },
                {
                    "label": "Maine",
                    "number": 1.134001134001134
                },
                {
                    "label": "Pennsylvania",
                    "number": 0.9941346058256287
                },
                {
                    "label": "Indiana",
                    "number": 0.8746610688358262
                }
            ],
            "answer": "New Jersey",
            "answerValue": 4.019427231619495,
            "question": "Which state's subreddit talked about Pizza Hut the most in the past year?",
            "rowIndex": 182,
            "approved": true,
            "params": {
                "per": 10000,
                "regex": "(?i)\\b(pizza hut)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(pizza hut)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(pizza hut)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Hawaii",
                    "number": 3.7823781702745602
                },
                {
                    "label": "Idaho",
                    "number": 2.274019329164298
                },
                {
                    "label": "Alaska",
                    "number": 1.8609977811180303
                },
                {
                    "label": "Delaware",
                    "number": 1.1573117301810367
                },
                {
                    "label": "North Dakota",
                    "number": 0.7735946364105208
                },
                {
                    "label": "South Carolina",
                    "number": 0.7378258730939499
                },
                {
                    "label": "Virginia",
                    "number": 0.7309941520467836
                },
                {
                    "label": "New Jersey",
                    "number": 0.6866521520683303
                },
                {
                    "label": "Oregon",
                    "number": 0.6147540983606558
                },
                {
                    "label": "Louisiana",
                    "number": 0.5276116778051354
                }
            ],
            "answer": "Hawaii",
            "answerValue": 3.7823781702745602,
            "question": "Which state's subreddit talked about Costco the most in the past year?",
            "rowIndex": 184,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(costco)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(costco)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(costco)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Massachusetts Institute of Technology",
                    "number": 361460
                },
                {
                    "label": "Harvard University",
                    "number": 336466
                },
                {
                    "label": "University of Oxford",
                    "number": 223237
                },
                {
                    "label": "Stanford University",
                    "number": 221424
                },
                {
                    "label": "University of Cambridge",
                    "number": 179318
                },
                {
                    "label": "Yale University",
                    "number": 171550
                },
                {
                    "label": "Columbia University",
                    "number": 165718
                },
                {
                    "label": "University of Chicago",
                    "number": 155699
                },
                {
                    "label": "Cornell University",
                    "number": 149332
                },
                {
                    "label": "University of Pennsylvania",
                    "number": 143758
                }
            ],
            "answer": "Massachusetts Institute of Technology",
            "answerValue": 361460,
            "question": "Which college or university had the most popular page in the past month?",
            "rowIndex": 128,
            "approved": true,
            "params": {
                "freebase_tag": "universities",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.universities]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.universities]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6679592095
        },
        {
            "top10": [
                {
                    "label": "Illinois",
                    "number": 4.726890756302521
                },
                {
                    "label": "West Virginia",
                    "number": 3.7369207772795217
                },
                {
                    "label": "Wisconsin",
                    "number": 3.3804281875704256
                },
                {
                    "label": "Massachusetts",
                    "number": 3.177257525083612
                },
                {
                    "label": "Washington",
                    "number": 3.1194295900178255
                },
                {
                    "label": "Rhode Island",
                    "number": 2.8041751051565664
                },
                {
                    "label": "North Carolina",
                    "number": 2.634369975024804
                },
                {
                    "label": "Georgia",
                    "number": 2.610479209397725
                },
                {
                    "label": "New Hampshire",
                    "number": 2.583562086226385
                },
                {
                    "label": "Oregon",
                    "number": 2.5614754098360657
                }
            ],
            "answer": "Illinois",
            "answerValue": 4.726890756302521,
            "question": "Which state's subreddit mentioned unemployment the most in the past year?",
            "rowIndex": 185,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(unemployment|unemployed)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(unemployment|unemployed)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(unemployment|unemployed)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Oregon",
                    "number": 0.9067622950819673
                },
                {
                    "label": "Florida",
                    "number": 0.8335013779659878
                },
                {
                    "label": "California",
                    "number": 0.7575980897915868
                },
                {
                    "label": "Alaska",
                    "number": 0.6585069071648415
                },
                {
                    "label": "Washington",
                    "number": 0.5347593582887701
                },
                {
                    "label": "Nebraska",
                    "number": 0.5102040816326531
                },
                {
                    "label": "New Mexico",
                    "number": 0.4836109618484686
                },
                {
                    "label": "Idaho",
                    "number": 0.4832291074474133
                },
                {
                    "label": "Arizona",
                    "number": 0.45596781403665626
                },
                {
                    "label": "Oklahoma",
                    "number": 0.40648391414266594
                }
            ],
            "answer": "Oregon",
            "answerValue": 0.9067622950819673,
            "question": "What state's subreddit mentioned rain the most in the past year?",
            "rowIndex": 186,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(rain|rainy|raining)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(rain|rainy|raining)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(rain|rainy|raining)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Hawaii",
                    "number": 0.7632298807875452
                },
                {
                    "label": "Montana",
                    "number": 0.7319173363949484
                },
                {
                    "label": "New York",
                    "number": 0.6111111111111112
                },
                {
                    "label": "Iowa",
                    "number": 0.6032868733097566
                },
                {
                    "label": "Massachusetts",
                    "number": 0.568561872909699
                },
                {
                    "label": "Idaho",
                    "number": 0.5685048322910745
                },
                {
                    "label": "Alaska",
                    "number": 0.5439839667883473
                },
                {
                    "label": "Rhode Island",
                    "number": 0.5140987692787038
                },
                {
                    "label": "Wyoming",
                    "number": 0.4998077662437524
                },
                {
                    "label": "Connecticut",
                    "number": 0.4070613544808386
                }
            ],
            "answer": "Hawaii",
            "answerValue": 0.7632298807875452,
            "question": "Which state's subreddit mentioned bikes the most in the past year?",
            "rowIndex": 187,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(bike|bicycling|unicycle|bikes|fixie|single speed|bmx)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(bike|bicycling|unicycle|bikes|fixie|single speed|bmx)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(bike|bicycling|unicycle|bikes|fixie|single speed|bmx)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "New York",
                    "number": 8.88888888888889
                },
                {
                    "label": "Wyoming",
                    "number": 8.842752787389466
                },
                {
                    "label": "Alaska",
                    "number": 7.873452150883974
                },
                {
                    "label": "New Jersey",
                    "number": 3.0313180371797017
                },
                {
                    "label": "Hawaii",
                    "number": 2.971868562358583
                },
                {
                    "label": "Oregon",
                    "number": 2.971311475409836
                },
                {
                    "label": "Florida",
                    "number": 2.688714122470928
                },
                {
                    "label": "Missouri",
                    "number": 2.644725242433147
                },
                {
                    "label": "Delaware",
                    "number": 2.1492932131933538
                },
                {
                    "label": "Rhode Island",
                    "number": 2.025237575946409
                }
            ],
            "answer": "New York",
            "answerValue": 8.88888888888889,
            "question": "Which state's subreddit mentioned Uber the most in the past year?",
            "rowIndex": 188,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(uber)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(uber)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(uber)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Kentucky",
                    "number": 17.363490975554033
                },
                {
                    "label": "Pennsylvania",
                    "number": 8.450144149517845
                },
                {
                    "label": "Kansas",
                    "number": 8.221476510067115
                },
                {
                    "label": "Ohio",
                    "number": 7.252600438973184
                },
                {
                    "label": "Indiana",
                    "number": 7.172220764453774
                },
                {
                    "label": "North Carolina",
                    "number": 7.116220192274795
                },
                {
                    "label": "Wisconsin",
                    "number": 7.020889312646268
                },
                {
                    "label": "Iowa",
                    "number": 6.656958602038694
                },
                {
                    "label": "California",
                    "number": 5.851487191580933
                },
                {
                    "label": "Wyoming",
                    "number": 5.767012687427912
                }
            ],
            "answer": "Kentucky",
            "answerValue": 17.363490975554033,
            "question": "Which state's subreddit mentioned Obamacare the most in the past year?",
            "rowIndex": 189,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(ACA|obamacare|affordable care act)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(ACA|obamacare|affordable care act)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(ACA|obamacare|affordable care act)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "New York City",
                    "number": 1.3237207530356792
                },
                {
                    "label": "Philadelphia",
                    "number": 1.296115189291732
                },
                {
                    "label": "Pittsburgh",
                    "number": 1.145544435065718
                },
                {
                    "label": "Los Angeles",
                    "number": 1.0253767602301052
                },
                {
                    "label": "Portland",
                    "number": 0.9250000398706913
                },
                {
                    "label": "Washington, D.C.",
                    "number": 0.9196247930844216
                },
                {
                    "label": "Vancouver",
                    "number": 0.9029793005274461
                },
                {
                    "label": "Austin",
                    "number": 0.8791642364565821
                },
                {
                    "label": "Boston",
                    "number": 0.8279472250413974
                },
                {
                    "label": "Atlanta",
                    "number": 0.7558109716759839
                }
            ],
            "answer": "New York City",
            "answerValue": 1.3237207530356792,
            "question": "Which city's subreddit brought up kale the most in the past 6 months?",
            "rowIndex": 180,
            "approved": true,
            "params": {
                "per": 10000,
                "regex": "(?i)\\b(kale)\\b"
            },
            "sql": "\nSELECT\n cities.city,\n SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(kale)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n SELECT\n   body,\n   subreddit\n FROM\n   TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n [subreddits.cities] cities\nON\n comments.subreddit = cities.subreddit\nGROUP BY\n cities.city\nORDER BY\n per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  cities.city,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(kale)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    body,\n    subreddit\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n  [subreddits.cities] cities\nON\n  comments.subreddit = cities.subreddit\nJOIN\n  [fh-bigquery:freebase20140119.triples_lang_en] aliases\nON\n  aliases.sub = cities.mid\nWHERE\n  (aliases.pred = '/common/topic/alias'\n    OR aliases.pred = '/type/object/name')\n  AND aliases.obj = 'userInput'\nGROUP BY\n  cities.city\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 532396361
        },
        {
            "top10": [
                {
                    "label": "San Francisco",
                    "number": 3.673779309529547
                },
                {
                    "label": "Vancouver",
                    "number": 3.369352174321039
                },
                {
                    "label": "Toronto",
                    "number": 1.9653046302002344
                },
                {
                    "label": "London",
                    "number": 1.51285930408472
                },
                {
                    "label": "Los Angeles",
                    "number": 1.5091442573643086
                },
                {
                    "label": "New York City",
                    "number": 1.4754643515544033
                },
                {
                    "label": "Portland",
                    "number": 1.4369397171094707
                },
                {
                    "label": "Washington, D.C.",
                    "number": 1.2393038878232918
                },
                {
                    "label": "Montreal",
                    "number": 1.2275796221782718
                },
                {
                    "label": "Chicago",
                    "number": 1.163325209745224
                }
            ],
            "answer": "San Francisco",
            "answerValue": 3.673779309529547,
            "question": "Which city's subreddit mentioned Airbnb the most?",
            "rowIndex": 190,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(airbnb)\\b"
            },
            "sql": "\nSELECT\n cities.city,\n SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(airbnb)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n SELECT\n   body,\n   subreddit\n FROM\n   TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n [subreddits.cities] cities\nON\n comments.subreddit = cities.subreddit\nGROUP BY\n cities.city\nORDER BY\n per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  cities.city,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(airbnb)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    body,\n    subreddit\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n  [subreddits.cities] cities\nON\n  comments.subreddit = cities.subreddit\nJOIN\n  [fh-bigquery:freebase20140119.triples_lang_en] aliases\nON\n  aliases.sub = cities.mid\nWHERE\n  (aliases.pred = '/common/topic/alias'\n    OR aliases.pred = '/type/object/name')\n  AND aliases.obj = 'userInput'\nGROUP BY\n  cities.city\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 532396361
        },
        {
            "top10": [
                {
                    "label": "Nebraska",
                    "number": 2.5510204081632653
                },
                {
                    "label": "Texas",
                    "number": 2.337510551262905
                },
                {
                    "label": "Alaska",
                    "number": 2.004151456588648
                },
                {
                    "label": "Virginia",
                    "number": 1.827485380116959
                },
                {
                    "label": "New Mexico",
                    "number": 1.6120365394948952
                },
                {
                    "label": "Utah",
                    "number": 1.5441630636195183
                },
                {
                    "label": "Arizona",
                    "number": 1.5198927134555207
                },
                {
                    "label": "West Virginia",
                    "number": 1.4947683109118086
                },
                {
                    "label": "California",
                    "number": 1.4886655071780208
                },
                {
                    "label": "Rhode Island",
                    "number": 1.4020875525782832
                }
            ],
            "answer": "Nebraska",
            "answerValue": 2.5510204081632653,
            "question": "Which state’s subreddit talked tacos the most in the past year?",
            "rowIndex": 200,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(taco|tacos|taqueria)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(taco|tacos|taqueria)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(taco|tacos|taqueria)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "New York",
                    "number": 8.88888888888889
                },
                {
                    "label": "Wyoming",
                    "number": 8.842752787389466
                },
                {
                    "label": "Alaska",
                    "number": 7.873452150883974
                },
                {
                    "label": "New Jersey",
                    "number": 3.0313180371797017
                },
                {
                    "label": "Hawaii",
                    "number": 2.971868562358583
                },
                {
                    "label": "Oregon",
                    "number": 2.971311475409836
                },
                {
                    "label": "Florida",
                    "number": 2.688714122470928
                },
                {
                    "label": "Missouri",
                    "number": 2.644725242433147
                },
                {
                    "label": "Delaware",
                    "number": 2.1492932131933538
                },
                {
                    "label": "Rhode Island",
                    "number": 2.025237575946409
                }
            ],
            "answer": "New York",
            "answerValue": 8.88888888888889,
            "question": "Which state’s subreddit got their barbecue on the most in the last year?",
            "rowIndex": 198,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(uber)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(uber)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(uber)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "England",
                    "number": 3828
                },
                {
                    "label": "Mexico",
                    "number": 2788
                },
                {
                    "label": "Germany",
                    "number": 2644
                },
                {
                    "label": "Portugal",
                    "number": 2125
                },
                {
                    "label": "Spain",
                    "number": 2079
                },
                {
                    "label": "France",
                    "number": 1563
                },
                {
                    "label": "Chile",
                    "number": 1439
                },
                {
                    "label": "Italy",
                    "number": 1418
                },
                {
                    "label": "Monaco",
                    "number": 1250
                },
                {
                    "label": "Brazil",
                    "number": 1215
                }
            ],
            "answer": "England",
            "answerValue": 3828,
            "question": "Which country was mentioned the most in /r/soccer in the past month?",
            "rowIndex": 68,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "soccer"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'soccer') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'soccer') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 64411800
        },
        {
            "top10": [
                {
                    "label": "South Carolina",
                    "number": 1.7215937038858828
                },
                {
                    "label": "Georgia",
                    "number": 1.1187768040275965
                },
                {
                    "label": "Arkansas",
                    "number": 0.6519967400162999
                },
                {
                    "label": "Mississippi",
                    "number": 0.3450655624568668
                },
                {
                    "label": "Colorado",
                    "number": 0.22166805209199225
                },
                {
                    "label": "Delaware",
                    "number": 0.16533024716871952
                },
                {
                    "label": "Alaska",
                    "number": 0.14315367547061772
                },
                {
                    "label": "North Carolina",
                    "number": 0.13685038831297683
                },
                {
                    "label": "Connecticut",
                    "number": 0.10545630945099445
                },
                {
                    "label": "Arizona",
                    "number": 0.08940545373267769
                }
            ],
            "answer": "South Carolina",
            "answerValue": 1.7215937038858828,
            "question": "Which state’s subreddit talked about Waffle House the most in the past year?",
            "rowIndex": 201,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(waffle house)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(waffle house)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(waffle house)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Wyoming",
                    "number": 5.3825451749327184
                },
                {
                    "label": "Alabama",
                    "number": 5.128205128205129
                },
                {
                    "label": "Georgia",
                    "number": 4.475107216110386
                },
                {
                    "label": "South Carolina",
                    "number": 4.426955238563699
                },
                {
                    "label": "Texas",
                    "number": 3.5874293877020973
                },
                {
                    "label": "North Carolina",
                    "number": 3.284409319511444
                },
                {
                    "label": "Washington",
                    "number": 3.1194295900178255
                },
                {
                    "label": "Mississippi",
                    "number": 3.1055900621118013
                },
                {
                    "label": "Arkansas",
                    "number": 2.7709861450692745
                },
                {
                    "label": "Montana",
                    "number": 2.7267508610792195
                }
            ],
            "answer": "Wyoming",
            "answerValue": 5.3825451749327184,
            "question": "In which state's subreddit would you see 'y'all' the most in the past year?",
            "rowIndex": 206,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(y\\'all|yall)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(y\\'all|yall)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(y\\'all|yall)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Mexico",
                    "number": 105
                },
                {
                    "label": "Turkey",
                    "number": 65
                },
                {
                    "label": "Canada",
                    "number": 58
                },
                {
                    "label": "Japan",
                    "number": 58
                },
                {
                    "label": "Italy",
                    "number": 44
                },
                {
                    "label": "Germany",
                    "number": 42
                },
                {
                    "label": "England",
                    "number": 40
                },
                {
                    "label": "China",
                    "number": 34
                },
                {
                    "label": "Georgia",
                    "number": 31
                },
                {
                    "label": "Australia",
                    "number": 31
                }
            ],
            "answer": "Mexico",
            "answerValue": 105,
            "question": "Which country was mentioned the most in /r/food in the past month?",
            "rowIndex": 156,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "food"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'food') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'food') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 63983874
        },
        {
            "top10": [
                {
                    "label": "Texas",
                    "number": 1.7855983377702747
                },
                {
                    "label": "North Dakota",
                    "number": 1.0314595152140278
                },
                {
                    "label": "Kansas",
                    "number": 0.8389261744966443
                },
                {
                    "label": "Kentucky",
                    "number": 0.4569339730408956
                },
                {
                    "label": "Arizona",
                    "number": 0.2682163611980331
                },
                {
                    "label": "Indiana",
                    "number": 0.26239832065074786
                },
                {
                    "label": "Wisconsin",
                    "number": 0.26003293750541734
                },
                {
                    "label": "Alabama",
                    "number": 0.2564102564102564
                },
                {
                    "label": "Minnesota",
                    "number": 0.1936824312427369
                },
                {
                    "label": "Tennessee",
                    "number": 0.19135093761959435
                }
            ],
            "answer": "Texas",
            "answerValue": 1.7855983377702747,
            "question": "Which state's subreddit mentioned Ted Cruz the most in the past year?",
            "rowIndex": 215,
            "approved": true,
            "params": {
                "per": 1000,
                "regex": "(?i)\\b(ted cruz)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(ted cruz)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(ted cruz)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "West Virginia",
                    "number": 1.4200298953662183
                },
                {
                    "label": "Kentucky",
                    "number": 0.7425177061914553
                },
                {
                    "label": "Nebraska",
                    "number": 0.6632653061224489
                },
                {
                    "label": "South Dakota",
                    "number": 0.640279394644936
                },
                {
                    "label": "Vermont",
                    "number": 0.6249545817891141
                },
                {
                    "label": "Virginia",
                    "number": 0.5847953216374269
                },
                {
                    "label": "Oregon",
                    "number": 0.45594262295081966
                },
                {
                    "label": "Indiana",
                    "number": 0.44607714510627133
                },
                {
                    "label": "Maryland",
                    "number": 0.4162462159434914
                },
                {
                    "label": "Georgia",
                    "number": 0.41021816147678536
                }
            ],
            "answer": "West Virginia",
            "answerValue": 1.4200298953662183,
            "question": "Which state's subreddit mentioned Bernie Sanders the most in the past year?",
            "rowIndex": 216,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(bernie|sanders|#?feelthebern)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(bernie|sanders|#?feelthebern)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(bernie|sanders|#?feelthebern)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "New York City",
                    "number": 1.2914348810104186
                },
                {
                    "label": "Boston",
                    "number": 1.1751509000587574
                },
                {
                    "label": "Portland",
                    "number": 1.0525862522666487
                },
                {
                    "label": "San Francisco",
                    "number": 1.045754011375985
                },
                {
                    "label": "Montreal",
                    "number": 1.022983018481893
                },
                {
                    "label": "Seattle",
                    "number": 0.9981989019812079
                },
                {
                    "label": "Los Angeles",
                    "number": 0.7624596422223858
                },
                {
                    "label": "Pittsburgh",
                    "number": 0.7235017484625588
                },
                {
                    "label": "Dallas",
                    "number": 0.7127491382214965
                },
                {
                    "label": "Toronto",
                    "number": 0.5268485198749613
                }
            ],
            "answer": "New York City",
            "answerValue": 1.2914348810104186,
            "question": "Which city’s subreddit described things as \"artisanal\" the most?",
            "rowIndex": 211,
            "approved": true,
            "params": {
                "per": 10000,
                "regex": "(?i)\\b(artisanal)\\b"
            },
            "sql": "\nSELECT\n cities.city,\n SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(artisanal)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n SELECT\n   body,\n   subreddit\n FROM\n   TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n [subreddits.cities] cities\nON\n comments.subreddit = cities.subreddit\nGROUP BY\n cities.city\nORDER BY\n per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  cities.city,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(artisanal)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    body,\n    subreddit\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n  [subreddits.cities] cities\nON\n  comments.subreddit = cities.subreddit\nJOIN\n  [fh-bigquery:freebase20140119.triples_lang_en] aliases\nON\n  aliases.sub = cities.mid\nWHERE\n  (aliases.pred = '/common/topic/alias'\n    OR aliases.pred = '/type/object/name')\n  AND aliases.obj = 'userInput'\nGROUP BY\n  cities.city\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 532396361
        },
        {
            "top10": [
                {
                    "label": "San Diego",
                    "number": 2.4233921112209433
                },
                {
                    "label": "Vancouver",
                    "number": 1.7528421716121014
                },
                {
                    "label": "Los Angeles",
                    "number": 1.735252978850947
                },
                {
                    "label": "Toronto",
                    "number": 1.2133481063786986
                },
                {
                    "label": "Pittsburgh",
                    "number": 1.2058362474375979
                },
                {
                    "label": "Houston",
                    "number": 1.0545397938123622
                },
                {
                    "label": "Montreal",
                    "number": 1.022983018481893
                },
                {
                    "label": "Denver",
                    "number": 0.93711467324291
                },
                {
                    "label": "Atlanta",
                    "number": 0.8907772166181238
                },
                {
                    "label": "Boston",
                    "number": 0.8546552000427328
                }
            ],
            "answer": "San Diego",
            "answerValue": 2.4233921112209433,
            "question": "Which city’s subreddit talked about gas prices the most?",
            "rowIndex": 214,
            "approved": true,
            "params": {
                "per": 10000,
                "regex": "(?i)\\b(gas prices?|price of gas)\\b"
            },
            "sql": "\nSELECT\n cities.city,\n SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(gas prices?|price of gas)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n SELECT\n   body,\n   subreddit\n FROM\n   TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n [subreddits.cities] cities\nON\n comments.subreddit = cities.subreddit\nGROUP BY\n cities.city\nORDER BY\n per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  cities.city,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(gas prices?|price of gas)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    body,\n    subreddit\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n  [subreddits.cities] cities\nON\n  comments.subreddit = cities.subreddit\nJOIN\n  [fh-bigquery:freebase20140119.triples_lang_en] aliases\nON\n  aliases.sub = cities.mid\nWHERE\n  (aliases.pred = '/common/topic/alias'\n    OR aliases.pred = '/type/object/name')\n  AND aliases.obj = 'userInput'\nGROUP BY\n  cities.city\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 532396361
        },
        {
            "top10": [
                {
                    "label": "Ohio",
                    "number": 1.4409771924801984
                },
                {
                    "label": "Georgia",
                    "number": 0.018646280067126608
                },
                {
                    "label": "Kansas",
                    "number": 0.016778523489932886
                },
                {
                    "label": "Colorado",
                    "number": 0.01662510390689942
                },
                {
                    "label": "Utah",
                    "number": 0.015441630636195183
                },
                {
                    "label": "North Carolina",
                    "number": 0.013685038831297684
                },
                {
                    "label": "Alabama",
                    "number": 0.01282051282051282
                },
                {
                    "label": "Maryland",
                    "number": 0.012613521695257316
                },
                {
                    "label": "Wisconsin",
                    "number": 0.008667764583513912
                },
                {
                    "label": "Michigan",
                    "number": 0.005958942883532462
                }
            ],
            "answer": "Ohio",
            "answerValue": 1.4409771924801984,
            "question": "Which state's subreddit mentioned John Kasich the most in the past year?",
            "rowIndex": 218,
            "approved": true,
            "params": {
                "per": 100,
                "regex": "(?i)\\b(kasich)\\b"
            },
            "sql": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(kasich)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  states.state AS state,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(kasich)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^2017\")')) comments\nJOIN\n  [subreddits.states] states\nON\n  states.subreddit = comments.subreddit\nWHERE\n  states.state = 'userInput'\nGROUP BY\n  state\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 185166080
        },
        {
            "top10": [
                {
                    "label": "Barack Obama",
                    "number": 9296233
                },
                {
                    "label": "Bill Clinton",
                    "number": 2631275
                },
                {
                    "label": "Ronald Reagan",
                    "number": 1392325
                },
                {
                    "label": "Abraham Lincoln",
                    "number": 1354244
                },
                {
                    "label": "George Washington",
                    "number": 958747
                },
                {
                    "label": "Jimmy Carter",
                    "number": 954451
                },
                {
                    "label": "Richard Nixon",
                    "number": 945505
                },
                {
                    "label": "Thomas Jefferson",
                    "number": 847434
                },
                {
                    "label": "Theodore Roosevelt",
                    "number": 719040
                },
                {
                    "label": "Gerald Ford",
                    "number": 590714
                }
            ],
            "answer": "Barack Obama",
            "answerValue": 9296233,
            "question": "Which U.S. President had the most popular page in the past month?",
            "rowIndex": 141,
            "approved": true,
            "params": {
                "freebase_tag": "presidents",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.presidents]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.presidents]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6525598971
        },
        {
            "top10": [
                {
                    "label": "Germany",
                    "number": 221
                },
                {
                    "label": "France",
                    "number": 176
                },
                {
                    "label": "England",
                    "number": 149
                },
                {
                    "label": "Japan",
                    "number": 109
                },
                {
                    "label": "Italy",
                    "number": 104
                },
                {
                    "label": "China",
                    "number": 102
                },
                {
                    "label": "India",
                    "number": 90
                },
                {
                    "label": "Russia",
                    "number": 87
                },
                {
                    "label": "Roman Empire",
                    "number": 76
                },
                {
                    "label": "Spain",
                    "number": 75
                }
            ],
            "answer": "Germany",
            "answerValue": 221,
            "question": "Which country was mentioned the most in /r/AskHistorians in the past month?",
            "rowIndex": 160,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "askhistorians"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'askhistorians') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'askhistorians') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 63945564
        },
        {
            "top10": [
                {
                    "label": "CoffeeScript",
                    "number": 2.5959876148599443
                },
                {
                    "label": "TeX",
                    "number": 0.08635267873205484
                },
                {
                    "label": "Ruby",
                    "number": 0.08492667802900304
                },
                {
                    "label": "VimL",
                    "number": 0.07662101331290107
                },
                {
                    "label": "JavaScript",
                    "number": 0.07518065632291199
                },
                {
                    "label": "DM",
                    "number": 0.0728080103228783
                },
                {
                    "label": "CSS",
                    "number": 0.0547213410521126
                },
                {
                    "label": "HTML",
                    "number": 0.045636322956996656
                },
                {
                    "label": "Emacs Lisp",
                    "number": 0.043543931744886986
                },
                {
                    "label": "Elixir",
                    "number": 0.04194533125160208
                }
            ],
            "answer": "CoffeeScript",
            "answerValue": 2.5959876148599443,
            "question": "Developers of which programming language talk the most about coffee?",
            "rowIndex": 192,
            "approved": true,
            "params": {
                "min_comments": 25000,
                "per": 100,
                "regex": "(?i)\\b(coffee|latte|espresso)\\b"
            },
            "sql": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(coffee|latte|espresso)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language IS NOT NULL) repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nHAVING\n  total \u003e 25000\nORDER BY\n  per DESC\nLIMIT\n  10 IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(coffee|latte|espresso)\\b') THEN 1 ELSE 0 END) * 100 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language = 'userInput') repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "GitHub",
            "units": "% of Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 1222377998
        },
        {
            "top10": [
                {
                    "label": "Objective-C",
                    "number": 1.2992806316236243
                },
                {
                    "label": "TypeScript",
                    "number": 1.228433317568439
                },
                {
                    "label": "Shell",
                    "number": 1.1041232378193124
                },
                {
                    "label": "Java",
                    "number": 1.0357955401751426
                },
                {
                    "label": "DM",
                    "number": 0.7208713893354287
                },
                {
                    "label": "C++",
                    "number": 0.6640132696411805
                },
                {
                    "label": "Python",
                    "number": 0.6592558073226015
                },
                {
                    "label": "JavaScript",
                    "number": 0.6062956155073548
                },
                {
                    "label": "CSS",
                    "number": 0.5417954559615108
                },
                {
                    "label": "C",
                    "number": 0.5246749376423837
                }
            ],
            "answer": "Objective-C",
            "answerValue": 1.2992806316236243,
            "question": "Developers of which programming language mention insomnia the most?",
            "rowIndex": 191,
            "approved": true,
            "params": {
                "min_comments": 50000,
                "per": 100000,
                "regex": "(?i)\\b(insomniac?)\\b"
            },
            "sql": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(insomniac?)\\b') THEN 1 ELSE 0 END) * 100000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language IS NOT NULL) repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nHAVING\n  total \u003e 50000\nORDER BY\n  per DESC\nLIMIT\n  10 IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(insomniac?)\\b') THEN 1 ELSE 0 END) * 100000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language = 'userInput') repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "GitHub",
            "units": "Comments per 100,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 1222377991
        },
        {
            "top10": [
                {
                    "label": "Batman",
                    "number": 899308
                },
                {
                    "label": "Superman",
                    "number": 769166
                },
                {
                    "label": "Harley Quinn",
                    "number": 742460
                },
                {
                    "label": "Wonder Woman",
                    "number": 657345
                },
                {
                    "label": "Spider-Man",
                    "number": 589076
                },
                {
                    "label": "Iron Man",
                    "number": 422628
                },
                {
                    "label": "Aquaman",
                    "number": 292562
                },
                {
                    "label": "Captain America",
                    "number": 222697
                },
                {
                    "label": "Pierre Trudeau",
                    "number": 198242
                },
                {
                    "label": "Doctor Strange",
                    "number": 194759
                }
            ],
            "answer": "Batman",
            "answerValue": 899308,
            "question": "What comic book character was the most popular in the past month?",
            "rowIndex": 194,
            "approved": true,
            "params": {
                "freebase_tag": "comic_characters"
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.comic_characters]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.comic_characters]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name = 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6536187680
        },
        {
            "top10": [
                {
                    "label": "Mozzarella",
                    "number": 8
                },
                {
                    "label": "American cheese",
                    "number": 6
                },
                {
                    "label": "Brie",
                    "number": 3
                },
                {
                    "label": "Goat cheese",
                    "number": 3
                },
                {
                    "label": "Havarti",
                    "number": 3
                },
                {
                    "label": "Velveeta",
                    "number": 3
                },
                {
                    "label": "Red Leicester",
                    "number": 3
                },
                {
                    "label": "Halloumi",
                    "number": 2
                },
                {
                    "label": "Camembert",
                    "number": 2
                },
                {
                    "label": "Kraft Singles",
                    "number": 2
                }
            ],
            "answer": "Mozzarella",
            "answerValue": 8,
            "question": "What cheese was found most often in /r/GrilledCheese in the past month?",
            "rowIndex": 208,
            "approved": true,
            "params": {
                "freebase_tag": "cheese",
                "subreddit": "grilledcheese",
                "substring": true,
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cheese]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'grilledcheese') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.cheese]\n      WHERE\n        name = 'userInput'\n      OR name CONTAINS CONCAT(' ', 'userInput')\n      OR name CONTAINS CONCAT('userInput', ' ')\n) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'grilledcheese') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6592241573
        },
        {
            "top10": [
                {
                    "label": "DM",
                    "number": 5.449787703375841
                },
                {
                    "label": "Lua",
                    "number": 5.033942366871515
                },
                {
                    "label": "Swift",
                    "number": 2.700846875715267
                },
                {
                    "label": "CSS",
                    "number": 2.6845964842892864
                },
                {
                    "label": "JavaScript",
                    "number": 2.6452941311375238
                },
                {
                    "label": "PHP",
                    "number": 2.597686691640918
                },
                {
                    "label": "Shell",
                    "number": 2.5814401300215524
                },
                {
                    "label": "Makefile",
                    "number": 2.4520613191737084
                },
                {
                    "label": "CoffeeScript",
                    "number": 2.2346617155753696
                },
                {
                    "label": "Perl",
                    "number": 2.141778058248714
                }
            ],
            "answer": "DM",
            "answerValue": 5.449787703375841,
            "question": "Developers of which programming language LOL the most?",
            "rowIndex": 220,
            "approved": true,
            "params": {
                "min_comments": 50000,
                "per": 1000,
                "regex": "(?i)\\b(ha(ha)+|he(he)+|lol|rofl|lmfao|lulz|lolz|rotfl|lawl|hilarious)\\b"
            },
            "sql": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(ha(ha)+|he(he)+|lol|rofl|lmfao|lulz|lolz|rotfl|lawl|hilarious)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language IS NOT NULL) repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nHAVING\n  total \u003e 50000\nORDER BY\n  per DESC\nLIMIT\n  10 IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(ha(ha)+|he(he)+|lol|rofl|lmfao|lulz|lolz|rotfl|lawl|hilarious)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language = 'userInput') repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "GitHub",
            "units": "Comments per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 1222377991
        },
        {
            "top10": [
                {
                    "label": "Makefile",
                    "number": 2.699031523982571
                },
                {
                    "label": "Clojure",
                    "number": 2.373097181223592
                },
                {
                    "label": "Jupyter Notebook",
                    "number": 2.297200287150036
                },
                {
                    "label": "Perl",
                    "number": 2.2947622052664793
                },
                {
                    "label": "CSS",
                    "number": 2.215943414882579
                },
                {
                    "label": "R",
                    "number": 2.2013390213909427
                },
                {
                    "label": "Emacs Lisp",
                    "number": 2.1227666725632406
                },
                {
                    "label": "HTML",
                    "number": 2.081786810213646
                },
                {
                    "label": "Lua",
                    "number": 1.9474375579867904
                },
                {
                    "label": "PowerShell",
                    "number": 1.9122828762150965
                }
            ],
            "answer": "Makefile",
            "answerValue": 2.699031523982571,
            "question": "Developers of which programming language call out the most typos?",
            "rowIndex": 237,
            "approved": true,
            "params": {
                "min_comments": 50000,
                "per": 1000,
                "regex": "(?i)\\b(typo|typos)\\b"
            },
            "sql": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(typo|typos)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language IS NOT NULL) repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nHAVING\n  total \u003e 50000\nORDER BY\n  per DESC\nLIMIT\n  10 IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(typo|typos)\\b') THEN 1 ELSE 0 END) * 1000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language = 'userInput') repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "GitHub",
            "units": "Comments per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 1222377991
        },
        {
            "top10": [
                {
                    "label": "CoffeeScript",
                    "number": 10.784188378647308
                },
                {
                    "label": "Clojure",
                    "number": 7.717389207231194
                },
                {
                    "label": "Emacs Lisp",
                    "number": 6.5315897617330485
                },
                {
                    "label": "Ruby",
                    "number": 5.564830272676684
                },
                {
                    "label": "R",
                    "number": 3.947228590080311
                },
                {
                    "label": "Haskell",
                    "number": 3.589126105682397
                },
                {
                    "label": "TypeScript",
                    "number": 3.3781916233132074
                },
                {
                    "label": "Lua",
                    "number": 3.215109175921588
                },
                {
                    "label": "C",
                    "number": 2.927686152044501
                },
                {
                    "label": "Rust",
                    "number": 2.9186980444723103
                }
            ],
            "answer": "CoffeeScript",
            "answerValue": 10.784188378647308,
            "question": "Developers of which programming language give the most 👍?",
            "rowIndex": 241,
            "approved": true,
            "params": {
                "min_comments": 50000,
                "per": 10000,
                "regex": "(?i)\\b(👍|:+1:|:thumbsup:)\\b"
            },
            "sql": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(👍|:+1:|:thumbsup:)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language IS NOT NULL) repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nHAVING\n  total \u003e 50000\nORDER BY\n  per DESC\nLIMIT\n  10 IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(👍|:+1:|:thumbsup:)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language = 'userInput') repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "GitHub",
            "units": "Comments per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 1222377991
        },
        {
            "top10": [
                {
                    "label": "Pancake",
                    "number": 220661
                },
                {
                    "label": "Hamburger",
                    "number": 139030
                },
                {
                    "label": "Mojito",
                    "number": 118650
                },
                {
                    "label": "Hot dog",
                    "number": 106229
                },
                {
                    "label": "Martini",
                    "number": 81238
                },
                {
                    "label": "Black pudding",
                    "number": 73384
                },
                {
                    "label": "Caipirinha",
                    "number": 72466
                },
                {
                    "label": "Ice cream",
                    "number": 68144
                },
                {
                    "label": "Oreo",
                    "number": 66963
                },
                {
                    "label": "Long Island Iced Tea",
                    "number": 66673
                }
            ],
            "answer": "Pancake",
            "answerValue": 220661,
            "question": "What food was viewed the most in the past month?",
            "rowIndex": 248,
            "approved": true,
            "params": {
                "freebase_tag": "food_dishes",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.food_dishes]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.food_dishes]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6532463443
        },
        {
            "top10": [
                {
                    "label": "Australia",
                    "number": 24177
                },
                {
                    "label": "United States",
                    "number": 11461
                },
                {
                    "label": "United Kingdom",
                    "number": 6261
                },
                {
                    "label": "China",
                    "number": 5993
                },
                {
                    "label": "Canada",
                    "number": 2996
                },
                {
                    "label": "Fiji",
                    "number": 2612
                },
                {
                    "label": "France",
                    "number": 1930
                },
                {
                    "label": "Japan",
                    "number": 1851
                },
                {
                    "label": "Vietnam",
                    "number": 1648
                },
                {
                    "label": "Indonesia",
                    "number": 1091
                }
            ],
            "answer": "Australia",
            "answerValue": 24177,
            "question": "Which country was mentioned with New Zealand the most last year?",
            "rowIndex": 263,
            "approved": true,
            "params": {
                "country": "New Zealand",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'New Zealand' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'New Zealand' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761317497
        },
        {
            "top10": [
                {
                    "label": "United States",
                    "number": 152031
                },
                {
                    "label": "Philippines",
                    "number": 52800
                },
                {
                    "label": "Japan",
                    "number": 46096
                },
                {
                    "label": "Russia",
                    "number": 45444
                },
                {
                    "label": "Taiwan",
                    "number": 37626
                },
                {
                    "label": "Pakistan",
                    "number": 35827
                },
                {
                    "label": "United Kingdom",
                    "number": 31681
                },
                {
                    "label": "Australia",
                    "number": 30193
                },
                {
                    "label": "North Korea",
                    "number": 30145
                },
                {
                    "label": "Brunei",
                    "number": 26933
                }
            ],
            "answer": "United States",
            "answerValue": 152031,
            "question": "Which country was mentioned with China the most last year?",
            "rowIndex": 265,
            "approved": true,
            "params": {
                "country": "China",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'China' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'China' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761334193
        },
        {
            "top10": [
                {
                    "label": "South Korea",
                    "number": 47229
                },
                {
                    "label": "United States",
                    "number": 35153
                },
                {
                    "label": "China",
                    "number": 30145
                },
                {
                    "label": "Japan",
                    "number": 15093
                },
                {
                    "label": "Russia",
                    "number": 5704
                },
                {
                    "label": "Iran",
                    "number": 2633
                },
                {
                    "label": "United Kingdom",
                    "number": 1731
                },
                {
                    "label": "Canada",
                    "number": 1151
                },
                {
                    "label": "Pakistan",
                    "number": 1121
                },
                {
                    "label": "Cuba",
                    "number": 951
                }
            ],
            "answer": "South Korea",
            "answerValue": 47229,
            "question": "Which country was mentioned with North Korea the most last year?",
            "rowIndex": 264,
            "approved": true,
            "params": {
                "country": "North Korea",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'North Korea' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'North Korea' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761310688
        },
        {
            "top10": [
                {
                    "label": "Machu Picchu",
                    "number": 887262
                },
                {
                    "label": "Taj Mahal",
                    "number": 754373
                },
                {
                    "label": "Great Wall of China",
                    "number": 632804
                },
                {
                    "label": "Mohenjo-daro",
                    "number": 617529
                },
                {
                    "label": "Burj Khalifa",
                    "number": 598837
                },
                {
                    "label": "Mount Everest",
                    "number": 545746
                },
                {
                    "label": "Statue of Liberty",
                    "number": 454886
                },
                {
                    "label": "Macau",
                    "number": 414872
                },
                {
                    "label": "Empire State Building",
                    "number": 391791
                },
                {
                    "label": "Auschwitz concentration camp",
                    "number": 388744
                }
            ],
            "answer": "Machu Picchu",
            "answerValue": 887262,
            "question": "What tourist attraction was viewed the most in the past month?",
            "rowIndex": 246,
            "approved": true,
            "params": {
                "freebase_tag": "tourist_attractions",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.tourist_attractions]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.tourist_attractions]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6711907690
        },
        {
            "top10": [
                {
                    "label": "United Kingdom",
                    "number": 4237
                },
                {
                    "label": "Australia",
                    "number": 2427
                },
                {
                    "label": "Nigeria",
                    "number": 1877
                },
                {
                    "label": "Zimbabwe",
                    "number": 1836
                },
                {
                    "label": "China",
                    "number": 1348
                },
                {
                    "label": "France",
                    "number": 983
                },
                {
                    "label": "Canada",
                    "number": 893
                },
                {
                    "label": "Israel",
                    "number": 624
                },
                {
                    "label": "Ireland",
                    "number": 567
                },
                {
                    "label": "Mozambique",
                    "number": 546
                }
            ],
            "answer": "United Kingdom",
            "answerValue": 4237,
            "question": "Which country, besides the United States, was mentioned with South Africa the most last year?",
            "rowIndex": 266,
            "approved": true,
            "params": {
                "country": "South Africa",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'South Africa' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'South Africa' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761314911
        },
        {
            "top10": [
                {
                    "label": "Turkey",
                    "number": 28661
                },
                {
                    "label": "Italy",
                    "number": 7584
                },
                {
                    "label": "United Kingdom",
                    "number": 6963
                },
                {
                    "label": "Germany",
                    "number": 6729
                },
                {
                    "label": "Cyprus",
                    "number": 6389
                },
                {
                    "label": "Macedonia",
                    "number": 5985
                },
                {
                    "label": "Syria",
                    "number": 5843
                },
                {
                    "label": "Russia",
                    "number": 4143
                },
                {
                    "label": "Egypt",
                    "number": 3800
                },
                {
                    "label": "France",
                    "number": 3582
                }
            ],
            "answer": "Turkey",
            "answerValue": 28661,
            "question": "Which country, besides the United States, was mentioned with Greece the most last year?",
            "rowIndex": 267,
            "approved": true,
            "params": {
                "country": "Greece",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Greece' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Greece' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761319545
        },
        {
            "top10": [
                {
                    "label": "China",
                    "number": 8128
                },
                {
                    "label": "United Kingdom",
                    "number": 3561
                },
                {
                    "label": "Argentina",
                    "number": 3302
                },
                {
                    "label": "France",
                    "number": 2516
                },
                {
                    "label": "Russia",
                    "number": 2512
                },
                {
                    "label": "Mexico",
                    "number": 2115
                },
                {
                    "label": "Colombia",
                    "number": 2030
                },
                {
                    "label": "Australia",
                    "number": 1995
                },
                {
                    "label": "Portugal",
                    "number": 1625
                },
                {
                    "label": "Spain",
                    "number": 1552
                }
            ],
            "answer": "China",
            "answerValue": 8128,
            "question": "Which country, besides the United States, was mentioned with Brazil the most last year?",
            "rowIndex": 268,
            "approved": true,
            "params": {
                "country": "Brazil",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Brazil' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Brazil' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761318228
        },
        {
            "top10": [
                {
                    "label": "Scala",
                    "number": 2.906217250013944
                },
                {
                    "label": "Java",
                    "number": 2.2010655228721783
                },
                {
                    "label": "Clojure",
                    "number": 1.1576083810846791
                },
                {
                    "label": "Objective-C",
                    "number": 0.4764028982619956
                },
                {
                    "label": "VimL",
                    "number": 0.3831050665645053
                },
                {
                    "label": "HTML",
                    "number": 0.3111567474340681
                },
                {
                    "label": "TypeScript",
                    "number": 0.2763974964528988
                },
                {
                    "label": "C++",
                    "number": 0.24568490976723678
                },
                {
                    "label": "C",
                    "number": 0.2308569725626488
                },
                {
                    "label": "C#",
                    "number": 0.2034929566000397
                }
            ],
            "answer": "Scala",
            "answerValue": 2.906217250013944,
            "question": "Developers of which programming language wink the most?",
            "rowIndex": 250,
            "approved": true,
            "params": {
                "min_comments": 50000,
                "per": 10000,
                "regex": "(?i)\\b(😉|;\\)|:wink:)\\b"
            },
            "sql": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(😉|;\\)|:wink:)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language IS NOT NULL) repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nHAVING\n  total \u003e 50000\nORDER BY\n  per DESC\nLIMIT\n  10 IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  repos.language,\n  SUM(CASE WHEN REGEXP_MATCH(JSON_EXTRACT(payload, '$.comment.body'), r'(?i)\\b(😉|;\\)|:wink:)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    TABLE_QUERY([githubarchive:month], 'table_id like \"2016%\"')\n  WHERE\n    type = 'IssueCommentEvent') AS comments\nJOIN (\n  SELECT\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.language') language,\n    JSON_EXTRACT_SCALAR(payload, '$.pull_request.base.repo.full_name') name\n  FROM\n    TABLE_QUERY([githubarchive:month], 'REGEXP_MATCH(table_id, \"201604|201603|201602\")')\n  WHERE\n    type = 'PullRequestEvent'\n  GROUP BY\n    language,\n    name\n  HAVING\n    language = 'userInput') repos\nON\n  repos.name = comments.repo.name\nGROUP BY\n  repos.language\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "GitHub",
            "units": "Comments per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 1222377991
        },
        {
            "top10": [
                {
                    "label": "Syria",
                    "number": 93798
                },
                {
                    "label": "Russia",
                    "number": 70171
                },
                {
                    "label": "United States",
                    "number": 55834
                },
                {
                    "label": "Greece",
                    "number": 28661
                },
                {
                    "label": "Israel",
                    "number": 25770
                },
                {
                    "label": "Germany",
                    "number": 24739
                },
                {
                    "label": "Iran",
                    "number": 24362
                },
                {
                    "label": "Iraq",
                    "number": 21106
                },
                {
                    "label": "Saudi Arabia",
                    "number": 11688
                },
                {
                    "label": "United Kingdom",
                    "number": 10835
                }
            ],
            "answer": "Syria",
            "answerValue": 93798,
            "question": "Which country was mentioned with Turkey the most last year?",
            "rowIndex": 271,
            "approved": true,
            "params": {
                "country": "Turkey",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Turkey' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Turkey' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761323980
        },
        {
            "top10": [
                {
                    "label": "United Kingdom",
                    "number": 1651
                },
                {
                    "label": "Norway",
                    "number": 956
                },
                {
                    "label": "Canada",
                    "number": 550
                },
                {
                    "label": "Denmark",
                    "number": 527
                },
                {
                    "label": "Panama",
                    "number": 514
                },
                {
                    "label": "Sweden",
                    "number": 483
                },
                {
                    "label": "Russia",
                    "number": 428
                },
                {
                    "label": "France",
                    "number": 405
                },
                {
                    "label": "Finland",
                    "number": 323
                },
                {
                    "label": "Japan",
                    "number": 299
                }
            ],
            "answer": "United Kingdom",
            "answerValue": 1651,
            "question": "Which country, besides the United States, was mentioned with Iceland the most last year?",
            "rowIndex": 270,
            "approved": true,
            "params": {
                "country": "Iceland",
                "filter_us": true,
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Iceland' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Iceland' \n  AND other.country != 'United States'\nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761308189
        },
        {
            "top10": [
                {
                    "label": "John Lennon",
                    "number": 851980
                },
                {
                    "label": "Kurt Cobain",
                    "number": 737961
                },
                {
                    "label": "Iron Maiden",
                    "number": 713863
                },
                {
                    "label": "Jimi Hendrix",
                    "number": 686526
                },
                {
                    "label": "Eric Clapton",
                    "number": 647798
                },
                {
                    "label": "John Frusciante",
                    "number": 599840
                },
                {
                    "label": "George Harrison",
                    "number": 579816
                },
                {
                    "label": "Neil Young",
                    "number": 507786
                },
                {
                    "label": "Frank Zappa",
                    "number": 497603
                },
                {
                    "label": "Syd Barrett",
                    "number": 438443
                }
            ],
            "answer": "John Lennon",
            "answerValue": 851980,
            "question": "What guitarist was the most popular in the past month?",
            "rowIndex": 251,
            "approved": true,
            "params": {
                "freebase_tag": "guitarists",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.guitarists]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.guitarists]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6524077349
        },
        {
            "top10": [
                {
                    "label": "United Airlines",
                    "number": 385010
                },
                {
                    "label": "Delta Air Lines",
                    "number": 379757
                },
                {
                    "label": "American Airlines",
                    "number": 315596
                },
                {
                    "label": "Royal Air Force",
                    "number": 311295
                },
                {
                    "label": "Turkish Airlines",
                    "number": 307849
                },
                {
                    "label": "British Airways",
                    "number": 252615
                },
                {
                    "label": "Southwest Airlines",
                    "number": 221122
                },
                {
                    "label": "Ryanair",
                    "number": 214777
                },
                {
                    "label": "KLM",
                    "number": 205723
                },
                {
                    "label": "Air France",
                    "number": 201395
                }
            ],
            "answer": "United Airlines",
            "answerValue": 385010,
            "question": "What airline was visited the most on Wikipedia in the past month?",
            "rowIndex": 253,
            "approved": true,
            "params": {
                "freebase_tag": "airlines",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.airlines]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.airlines]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6574787882
        },
        {
            "top10": [
                {
                    "label": "Water",
                    "number": 723
                },
                {
                    "label": "Oil",
                    "number": 718
                },
                {
                    "label": "Meat",
                    "number": 709
                },
                {
                    "label": "Cheese",
                    "number": 518
                },
                {
                    "label": "Rice",
                    "number": 460
                },
                {
                    "label": "Garlic",
                    "number": 430
                },
                {
                    "label": "Butter",
                    "number": 425
                },
                {
                    "label": "Bacon",
                    "number": 356
                },
                {
                    "label": "Beef",
                    "number": 346
                },
                {
                    "label": "Olive",
                    "number": 293
                }
            ],
            "answer": "Water",
            "answerValue": 723,
            "question": "What's the most popular ingredient found in /r/cooking in the past month?",
            "rowIndex": 205,
            "approved": true,
            "params": {
                "freebase_tag": "ingredients",
                "subreddit": "cooking",
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.ingredients]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'cooking') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.ingredients]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'cooking') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 6631701829
        },
        {
            "top10": [
                {
                    "label": "The New York Times",
                    "number": 541245
                },
                {
                    "label": "The Guardian",
                    "number": 388732
                },
                {
                    "label": "USA Today",
                    "number": 230479
                },
                {
                    "label": "The Washington Post",
                    "number": 193288
                },
                {
                    "label": "The Times",
                    "number": 185891
                },
                {
                    "label": "The Daily Telegraph",
                    "number": 181284
                },
                {
                    "label": "The Wall Street Journal",
                    "number": 171944
                },
                {
                    "label": "The Economist",
                    "number": 155897
                },
                {
                    "label": "Le Monde",
                    "number": 128637
                },
                {
                    "label": "The Times of India",
                    "number": 126899
                }
            ],
            "answer": "The New York Times",
            "answerValue": 541245,
            "question": "What newspaper had the most popular Wikipedia page in the past month?",
            "rowIndex": 255,
            "approved": true,
            "params": {
                "freebase_tag": "newspapers",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.newspapers]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.newspapers]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6580099034
        },
        {
            "top10": [
                {
                    "label": "Puerto Rico",
                    "number": 50
                },
                {
                    "label": "Suriname",
                    "number": 23.91941391941392
                },
                {
                    "label": "Saint Helena",
                    "number": 23.23008849557522
                },
                {
                    "label": "Wallis and Futuna",
                    "number": 23.076923076923077
                },
                {
                    "label": "Djibouti",
                    "number": 19.046985225608946
                },
                {
                    "label": "Paraguay",
                    "number": 18.651745270450306
                },
                {
                    "label": "Madagascar",
                    "number": 17.98230088495575
                },
                {
                    "label": "Dominican Republic",
                    "number": 17.608431740426003
                },
                {
                    "label": "Andorra",
                    "number": 17.578125
                },
                {
                    "label": "Aruba",
                    "number": 17.48213304013194
                }
            ],
            "answer": "Puerto Rico",
            "answerValue": 50,
            "question": "Which country was the most hospitable to visiting officials last year?",
            "rowIndex": 287,
            "approved": true,
            "params": {
                "codes": "('043')",
                "min_events": 1,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('043') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('043') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "% of Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "Time",
                    "number": 362125
                },
                {
                    "label": "Rolling Stone",
                    "number": 259171
                },
                {
                    "label": "Playboy",
                    "number": 187029
                },
                {
                    "label": "The Economist",
                    "number": 155897
                },
                {
                    "label": "True Detective",
                    "number": 150971
                },
                {
                    "label": "Der Spiegel",
                    "number": 148012
                },
                {
                    "label": "Life Magazine",
                    "number": 133701
                },
                {
                    "label": "Nature",
                    "number": 117142
                },
                {
                    "label": "Billboard",
                    "number": 115211
                },
                {
                    "label": "TWICE",
                    "number": 113706
                }
            ],
            "answer": "Time",
            "answerValue": 362125,
            "question": "What magazine had the most popular Wikipedia page in the past month?",
            "rowIndex": 254,
            "approved": true,
            "params": {
                "freebase_tag": "magazines",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.magazines]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.magazines]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6553558098
        },
        {
            "top10": [
                {
                    "label": "Nauru",
                    "number": 2.6061257388500807
                },
                {
                    "label": "Bahamas",
                    "number": 2.5570959412369323
                },
                {
                    "label": "Malawi",
                    "number": 2.43799707638562
                },
                {
                    "label": "Zambia",
                    "number": 2.408121064009775
                },
                {
                    "label": "Ghana",
                    "number": 2.337046417864158
                },
                {
                    "label": "Lithuania",
                    "number": 2.318041217903328
                },
                {
                    "label": "Australia",
                    "number": 2.232175568776994
                },
                {
                    "label": "Trinidad and Tobago",
                    "number": 2.210087656272453
                },
                {
                    "label": "United Kingdom",
                    "number": 2.202569923669551
                },
                {
                    "label": "Zimbabwe",
                    "number": 2.1741814029565165
                }
            ],
            "answer": "Nauru",
            "answerValue": 2.6061257388500807,
            "question": "Officials of which country made the most pessimistic statements last year?",
            "rowIndex": 291,
            "approved": true,
            "params": {
                "codes": "('012')",
                "min_events": 1,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('012') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('012') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "% of Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380821141
        },
        {
            "top10": [
                {
                    "label": "Georgia",
                    "number": 5.331753554502369
                },
                {
                    "label": "Sao Tome and Principe",
                    "number": 5.206738131699847
                },
                {
                    "label": "Luxembourg",
                    "number": 3.785072437190537
                },
                {
                    "label": "Central African Republic",
                    "number": 3.70276008492569
                },
                {
                    "label": "Papua New Guinea",
                    "number": 3.6363636363636362
                },
                {
                    "label": "Kiribati",
                    "number": 3.5424669227486127
                },
                {
                    "label": "Antigua and Barbuda",
                    "number": 3.5079513564078577
                },
                {
                    "label": "Gabon",
                    "number": 3.236068451075033
                },
                {
                    "label": "Trinidad and Tobago",
                    "number": 3.2303491881017385
                },
                {
                    "label": "Grenada",
                    "number": 3.218055436368317
                }
            ],
            "answer": "Georgia",
            "answerValue": 5.331753554502369,
            "question": "Officials of which country made the most optimistic statements last year?",
            "rowIndex": 292,
            "approved": true,
            "params": {
                "codes": "('013')",
                "min_events": 1,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('013') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('013') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "% of Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380821141
        },
        {
            "top10": [
                {
                    "label": "Ryan Reynolds",
                    "number": 1070170
                },
                {
                    "label": "Jim Carrey",
                    "number": 903817
                },
                {
                    "label": "Ellen DeGeneres",
                    "number": 827361
                },
                {
                    "label": "Jackie Chan",
                    "number": 824407
                },
                {
                    "label": "Charlie Chaplin",
                    "number": 725658
                },
                {
                    "label": "Ashton Kutcher",
                    "number": 719481
                },
                {
                    "label": "Woody Allen",
                    "number": 718871
                },
                {
                    "label": "Rowan Atkinson",
                    "number": 709864
                },
                {
                    "label": "Seth MacFarlane",
                    "number": 647884
                },
                {
                    "label": "Bill Murray",
                    "number": 594877
                }
            ],
            "answer": "Ryan Reynolds",
            "answerValue": 1070170,
            "question": "Who was the most popular comedic actor or actress in the past month?",
            "rowIndex": 261,
            "approved": true,
            "params": {
                "freebase_tag": "comedians"
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.comedians]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.comedians]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name = 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6577393328
        },
        {
            "top10": [
                {
                    "label": "Turkmenistan",
                    "number": 12.807293645194552
                },
                {
                    "label": "Uzbekistan",
                    "number": 10.049417929753574
                },
                {
                    "label": "Kyrgyzstan",
                    "number": 8.28237730110971
                },
                {
                    "label": "Seychelles",
                    "number": 6.964520367936925
                },
                {
                    "label": "Barbados",
                    "number": 6.492746841366402
                },
                {
                    "label": "Kazakhstan",
                    "number": 6.307365375050866
                },
                {
                    "label": "Azerbaijan",
                    "number": 6.271667191931925
                },
                {
                    "label": "Trinidad and Tobago",
                    "number": 6.179048713895675
                },
                {
                    "label": "Kuwait",
                    "number": 6.118915515680951
                },
                {
                    "label": "Cuba",
                    "number": 6.10574189880614
                }
            ],
            "answer": "Turkmenistan",
            "answerValue": 12.807293645194552,
            "question": "Which country showed the most empathy last year?",
            "rowIndex": 294,
            "approved": true,
            "params": {
                "codes": "('018')",
                "min_events": 1,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('018') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('018') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "Georgia",
                    "number": 1.1848341232227488
                },
                {
                    "label": "Turkmenistan",
                    "number": 0.9768274814131438
                },
                {
                    "label": "Moldova",
                    "number": 0.8719916288803627
                },
                {
                    "label": "Estonia",
                    "number": 0.852099817407182
                },
                {
                    "label": "Tajikistan",
                    "number": 0.718227867241249
                },
                {
                    "label": "Saint Lucia",
                    "number": 0.7014467338886453
                },
                {
                    "label": "Cook Islands",
                    "number": 0.5829204313611193
                },
                {
                    "label": "Belarus",
                    "number": 0.4996123697131536
                },
                {
                    "label": "Botswana",
                    "number": 0.4779938963856308
                },
                {
                    "label": "Cyprus",
                    "number": 0.4765259188662827
                }
            ],
            "answer": "Georgia",
            "answerValue": 1.1848341232227488,
            "question": "Which country is the most agreeable in their media?",
            "rowIndex": 296,
            "approved": true,
            "params": {
                "codes": "('019')",
                "min_events": 1,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('019') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('019') THEN 1 ELSE 0 END) * 1000 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events per 1,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579334
        },
        {
            "top10": [
                {
                    "label": "Russia",
                    "number": 3623
                },
                {
                    "label": "Nigeria",
                    "number": 2351
                },
                {
                    "label": "United Kingdom",
                    "number": 2334
                },
                {
                    "label": "China",
                    "number": 1742
                },
                {
                    "label": "Turkey",
                    "number": 1731
                },
                {
                    "label": "Pakistan",
                    "number": 1532
                },
                {
                    "label": "Syria",
                    "number": 1401
                },
                {
                    "label": "Canada",
                    "number": 1219
                },
                {
                    "label": "France",
                    "number": 1184
                },
                {
                    "label": "Germany",
                    "number": 1136
                }
            ],
            "answer": "Russia",
            "answerValue": 3623,
            "question": "Which country, besides the United States, called other countries on the phone the most?",
            "rowIndex": 298,
            "approved": true,
            "params": {
                "codes": "('041')",
                "filter_us": true,
                "per": 1000,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('041') THEN 1 ELSE 0 END) total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016 \n  AND codes.country != 'United States'\nGROUP BY\n  codes.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  'userInput',\n  COUNT(*)\nFROM (\n  SELECT\n    events.GLOBALEVENTID,\n  FROM\n    [gdelt-bq:full.events] events\n  JOIN\n    [gdelt-bq:extra.countryinfo] codes\n  ON\n    events.Actor1CountryCode = codes.iso3\n  JOIN (\n    SELECT\n      *\n    FROM (\n      SELECT\n        sub,\n        obj AS alias,\n        CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n        SUM(input) OVER (PARTITION BY sub) AS input_alias\n      FROM\n        [fh-bigquery:freebase20140119.triples_lang_en]\n      WHERE\n        (pred = '/common/topic/alias'\n          OR pred = '/type/object/name'))\n    WHERE\n      input_alias \u003e 0) aliases\n  ON\n    aliases.alias = codes.country\n  WHERE\n    Year = 2016\n    AND events.EventCode IN ('041') \n  AND codes.country != 'United States'\n  GROUP BY\n    events.GLOBALEVENTID)\n  IGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380579150
        },
        {
            "top10": [
                {
                    "label": "Pizza",
                    "number": 267108
                },
                {
                    "label": "Indian cuisine",
                    "number": 62494
                },
                {
                    "label": "French food",
                    "number": 60352
                },
                {
                    "label": "Japanese Cuisine",
                    "number": 53961
                },
                {
                    "label": "Chinese food",
                    "number": 48409
                },
                {
                    "label": "Italian food",
                    "number": 47587
                },
                {
                    "label": "Cuisine of the United States",
                    "number": 42102
                },
                {
                    "label": "Filipino food",
                    "number": 39432
                },
                {
                    "label": "Korean food",
                    "number": 38592
                },
                {
                    "label": "Thai food",
                    "number": 33887
                }
            ],
            "answer": "Pizza",
            "answerValue": 267108,
            "question": "What was the most popular type of cuisine in the past month?",
            "rowIndex": 277,
            "approved": true,
            "params": {
                "freebase_tag": "food_cuisine",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.food_cuisine]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.food_cuisine]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6523605503
        },
        {
            "top10": [
                {
                    "label": "Frying pan",
                    "number": 82034
                },
                {
                    "label": "Kitchen knife",
                    "number": 14352
                },
                {
                    "label": "Wok",
                    "number": 13421
                },
                {
                    "label": "Dutch oven",
                    "number": 11365
                },
                {
                    "label": "Parchment paper",
                    "number": 6834
                },
                {
                    "label": "Cutting board",
                    "number": 6498
                },
                {
                    "label": "Cast-iron cookware",
                    "number": 6313
                },
                {
                    "label": "Wooden spoon",
                    "number": 5751
                },
                {
                    "label": "Mixer",
                    "number": 5018
                },
                {
                    "label": "Sheet pan",
                    "number": 2984
                }
            ],
            "answer": "Frying pan",
            "answerValue": 82034,
            "question": "What was the most popular kitchen tool in the past month?",
            "rowIndex": 279,
            "approved": true,
            "params": {
                "freebase_tag": "kitchen_utensils",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.kitchen_utensils]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.kitchen_utensils]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6521752252
        },
        {
            "top10": [
                {
                    "label": "New York Yankees",
                    "number": 265808
                },
                {
                    "label": "Chicago Cubs",
                    "number": 202448
                },
                {
                    "label": "Boston Red Sox",
                    "number": 165893
                },
                {
                    "label": "Toronto Blue Jays",
                    "number": 122503
                },
                {
                    "label": "Cleveland Indians",
                    "number": 114569
                },
                {
                    "label": "San Francisco Giants",
                    "number": 109227
                },
                {
                    "label": "Oakland Athletics",
                    "number": 108005
                },
                {
                    "label": "Chicago White Sox",
                    "number": 97924
                },
                {
                    "label": "New York Mets",
                    "number": 97904
                },
                {
                    "label": "Los Angeles Angels of Anaheim",
                    "number": 95831
                }
            ],
            "answer": "New York Yankees",
            "answerValue": 265808,
            "question": "What was the most popular baseball team of the past month?",
            "rowIndex": 275,
            "approved": true,
            "params": {
                "freebase_tag": "baseball_teams",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.baseball_teams]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.baseball_teams]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6528081570
        },
        {
            "top10": [
                {
                    "label": "Golden State Warriors",
                    "number": 491735
                },
                {
                    "label": "Chicago Bulls",
                    "number": 419158
                },
                {
                    "label": "Miami Heat",
                    "number": 338104
                },
                {
                    "label": "Boston Celtics",
                    "number": 304085
                },
                {
                    "label": "Los Angeles Lakers",
                    "number": 294307
                },
                {
                    "label": "Cleveland Cavaliers",
                    "number": 267319
                },
                {
                    "label": "New York Knicks",
                    "number": 260396
                },
                {
                    "label": "Oklahoma City Thunder",
                    "number": 192168
                },
                {
                    "label": "San Antonio Spurs",
                    "number": 165430
                },
                {
                    "label": "Dallas Mavericks",
                    "number": 149561
                }
            ],
            "answer": "Golden State Warriors",
            "answerValue": 491735,
            "question": "What was the most popular pro basketball team of the past month?",
            "rowIndex": 276,
            "approved": true,
            "params": {
                "freebase_tag": "basketball_teams",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.basketball_teams]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.basketball_teams]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6530118773
        },
        {
            "top10": [
                {
                    "label": "Moldova",
                    "number": 2.2904313451924194
                },
                {
                    "label": "Panama",
                    "number": 2.2900036198060545
                },
                {
                    "label": "Georgia",
                    "number": 2.251184834123223
                },
                {
                    "label": "Burundi",
                    "number": 2.2099245034083412
                },
                {
                    "label": "Burkina Faso",
                    "number": 2.1540185519516903
                },
                {
                    "label": "Zambia",
                    "number": 1.992668483880064
                },
                {
                    "label": "Luxembourg",
                    "number": 1.863194571795342
                },
                {
                    "label": "Cyprus",
                    "number": 1.8605229353996602
                },
                {
                    "label": "Serbia",
                    "number": 1.7946577629382303
                },
                {
                    "label": "India",
                    "number": 1.7882820104415538
                }
            ],
            "answer": "Moldova",
            "answerValue": 2.2904313451924194,
            "question": "Which country made the most demands for economic, military and/or humanitarian aid?",
            "rowIndex": 305,
            "approved": true,
            "params": {
                "codes": "('100','101','1011','1012','1013','1014','102','103','1031','1032','1033', '1034', '104', '1041', '1042', '1043', '1044', '105', '1051', '1052', '1053', '1054', '1055', '1056', '106', '107', '108')",
                "min_events": 1,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('100','101','1011','1012','1013','1014','102','103','1031','1032','1033', '1034', '104', '1041', '1042', '1043', '1044', '105', '1051', '1052', '1053', '1054', '1055', '1056', '106', '107', '108') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('100','101','1011','1012','1013','1014','102','103','1031','1032','1033', '1034', '104', '1041', '1042', '1043', '1044', '105', '1051', '1052', '1053', '1054', '1055', '1056', '106', '107', '108') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "% of Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380821141
        },
        {
            "top10": [
                {
                    "label": "Cape Verde",
                    "number": 4.697986577181208
                },
                {
                    "label": "Panama",
                    "number": 4.25024086887974
                },
                {
                    "label": "Mozambique",
                    "number": 3.194928954309538
                },
                {
                    "label": "Maldives",
                    "number": 3.093462307406831
                },
                {
                    "label": "Malaysia",
                    "number": 2.862678307379229
                },
                {
                    "label": "Mauritius",
                    "number": 2.8266965787997758
                },
                {
                    "label": "Saint Vincent and the Grenadines",
                    "number": 2.570694087403599
                },
                {
                    "label": "Brazil",
                    "number": 2.5474280470245723
                },
                {
                    "label": "Ecuador",
                    "number": 2.478706096277156
                },
                {
                    "label": "Bahamas",
                    "number": 2.413986405998178
                }
            ],
            "answer": "Cape Verde",
            "answerValue": 4.697986577181208,
            "question": "Which country was involved in the most investigations last year?",
            "rowIndex": 307,
            "approved": true,
            "params": {
                "codes": "('090','091','092','093','094')",
                "min_events": 1,
                "per": 100,
                "relation": "Actor2CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('090','091','092','093','094') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor2CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('090','091','092','093','094') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor2CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT ",
            "units": "% of Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380578805
        },
        {
            "top10": [
                {
                    "label": "Hong Kong",
                    "number": 23.452123830093594
                },
                {
                    "label": "Georgia",
                    "number": 9.71563981042654
                },
                {
                    "label": "Gabon",
                    "number": 9.697235629662133
                },
                {
                    "label": "Turkey",
                    "number": 9.426918481028205
                },
                {
                    "label": "Brunei",
                    "number": 9.026823433603095
                },
                {
                    "label": "Zimbabwe",
                    "number": 8.892695120822147
                },
                {
                    "label": "India",
                    "number": 8.722541146801168
                },
                {
                    "label": "Burundi",
                    "number": 8.520853184783405
                },
                {
                    "label": "Venezuela",
                    "number": 8.36258689348004
                },
                {
                    "label": "Bahrain",
                    "number": 8.352668213457077
                }
            ],
            "answer": "Hong Kong",
            "answerValue": 23.452123830093594,
            "question": "Which country was the most disapproving last year?",
            "rowIndex": 308,
            "approved": true,
            "params": {
                "codes": "('110','111','112','1121','1122','1123','1124','1125','113','114','115','116')",
                "min_events": 1,
                "per": 100,
                "relation": "Actor1CountryCode",
                "year": 2016
            },
            "sql": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('110','111','112','1121','1122','1123','1124','1125','113','114','115','116') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  codes.country,\n  SUM(CASE WHEN events.EventCode IN ('110','111','112','1121','1122','1123','1124','1125','113','114','115','116') THEN 1 ELSE 0 END) * 100 / COUNT(*) as per,\n  COUNT(*) as total\nFROM\n  [gdelt-bq:full.events] events\nJOIN\n  [gdelt-bq:extra.countryinfo] codes\nON\n  events.Actor1CountryCode = codes.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = codes.country\nWHERE\n  Year = 2016\nGROUP BY\n  codes.country\nHAVING\n  total \u003e 1\nORDER BY\n  per DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "% of Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 380821141
        },
        {
            "top10": [
                {
                    "label": "Kit Kat",
                    "number": 71632
                },
                {
                    "label": "Snickers",
                    "number": 41254
                },
                {
                    "label": "Toblerone",
                    "number": 37750
                },
                {
                    "label": "Twix",
                    "number": 28103
                },
                {
                    "label": "Mars",
                    "number": 14774
                },
                {
                    "label": "Ritter Sport",
                    "number": 14232
                },
                {
                    "label": "Daim bar",
                    "number": 10590
                },
                {
                    "label": "Cadbury Dairy Milk",
                    "number": 7533
                },
                {
                    "label": "Milky Way",
                    "number": 6815
                },
                {
                    "label": "Cadbury Creme Egg",
                    "number": 6019
                }
            ],
            "answer": "Kit Kat",
            "answerValue": 71632,
            "question": "What was the most popular candy bar on Wikipedia last month?",
            "rowIndex": 280,
            "approved": true,
            "params": {
                "freebase_tag": "candy_bars"
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.candy_bars]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.candy_bars]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name = 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6523188799
        },
        {
            "top10": [
                {
                    "label": "Parmigiano-Reggiano",
                    "number": 136226
                },
                {
                    "label": "Casu marzu",
                    "number": 104400
                },
                {
                    "label": "Mozzarella",
                    "number": 74019
                },
                {
                    "label": "Halloumi",
                    "number": 63108
                },
                {
                    "label": "Ricotta",
                    "number": 56465
                },
                {
                    "label": "Mascarpone",
                    "number": 54014
                },
                {
                    "label": "Feta",
                    "number": 51324
                },
                {
                    "label": "Grana Padano",
                    "number": 39537
                },
                {
                    "label": "Gloucester cheese",
                    "number": 39495
                },
                {
                    "label": "Raclette",
                    "number": 35300
                }
            ],
            "answer": "Parmigiano-Reggiano",
            "answerValue": 136226,
            "question": "What was the most popular cheese in the past month?",
            "rowIndex": 281,
            "approved": true,
            "params": {
                "freebase_tag": "cheese",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.cheese]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.cheese]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6528321309
        },
        {
            "top10": [
                {
                    "label": "Gordon Ramsay",
                    "number": 406576
                },
                {
                    "label": "Chris Cornell",
                    "number": 246222
                },
                {
                    "label": "Julia Child",
                    "number": 153783
                },
                {
                    "label": "Vincent Price",
                    "number": 153731
                },
                {
                    "label": "Jamie Oliver",
                    "number": 150268
                },
                {
                    "label": "Dom DeLuise",
                    "number": 71158
                },
                {
                    "label": "Giada De Laurentiis",
                    "number": 51431
                },
                {
                    "label": "Anthony Bourdain",
                    "number": 48876
                },
                {
                    "label": "Marco Pierre White",
                    "number": 43742
                },
                {
                    "label": "Auguste Escoffier",
                    "number": 40375
                }
            ],
            "answer": "Gordon Ramsay",
            "answerValue": 406576,
            "question": "Who was the most popular chef in the past month?",
            "rowIndex": 284,
            "approved": true,
            "params": {
                "freebase_tag": "chefs",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.chefs]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.chefs]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6530924877
        },
        {
            "top10": [
                {
                    "label": "Leonardo da Vinci",
                    "number": 1749665
                },
                {
                    "label": "Nikola Tesla",
                    "number": 1394772
                },
                {
                    "label": "Elon Musk",
                    "number": 1265031
                },
                {
                    "label": "Steve Jobs",
                    "number": 1032954
                },
                {
                    "label": "Thomas Jefferson",
                    "number": 847434
                },
                {
                    "label": "Benjamin Franklin",
                    "number": 741076
                },
                {
                    "label": "James Cameron",
                    "number": 593890
                },
                {
                    "label": "Thomas Edison",
                    "number": 583373
                },
                {
                    "label": "Henry Ford",
                    "number": 412508
                },
                {
                    "label": "Alexander Graham Bell",
                    "number": 330032
                }
            ],
            "answer": "Leonardo da Vinci",
            "answerValue": 1749665,
            "question": "Who was the most popular inventor in the past month?",
            "rowIndex": 285,
            "approved": true,
            "params": {
                "freebase_tag": "inventors",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.inventors]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.inventors]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6543840722
        },
        {
            "top10": [
                {
                    "label": "Mojito",
                    "number": 118650
                },
                {
                    "label": "Martini",
                    "number": 81238
                },
                {
                    "label": "Caipirinha",
                    "number": 72466
                },
                {
                    "label": "Long Island Iced Tea",
                    "number": 66673
                },
                {
                    "label": "Moscow mule",
                    "number": 61531
                },
                {
                    "label": "Negroni",
                    "number": 48228
                },
                {
                    "label": "Cuba Libre",
                    "number": 46513
                },
                {
                    "label": "Sex on the Beach",
                    "number": 41977
                },
                {
                    "label": "Mai Tai",
                    "number": 37410
                },
                {
                    "label": "Mint julep",
                    "number": 35535
                }
            ],
            "answer": "Mojito",
            "answerValue": 118650,
            "question": "What was the most popular cocktail on Wikipedia in the last month?",
            "rowIndex": 321,
            "approved": true,
            "params": {
                "freebase_tag": "cocktails",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.cocktails]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.cocktails]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6525252054
        },
        {
            "top10": [
                {
                    "label": "Jon Stewart",
                    "number": 522146
                },
                {
                    "label": "Diego Maradona",
                    "number": 496695
                },
                {
                    "label": "Magic Johnson",
                    "number": 374585
                },
                {
                    "label": "John McEnroe",
                    "number": 265268
                },
                {
                    "label": "Jeremy Clarkson",
                    "number": 263501
                },
                {
                    "label": "Whoopi Goldberg",
                    "number": 223822
                },
                {
                    "label": "Jimmy Kimmel",
                    "number": 186412
                },
                {
                    "label": "David Letterman",
                    "number": 170442
                },
                {
                    "label": "Howard Stern",
                    "number": 153252
                },
                {
                    "label": "Rush Limbaugh",
                    "number": 142338
                }
            ],
            "answer": "Jon Stewart",
            "answerValue": 522146,
            "question": "What talk show host was viewed the most in the past month?",
            "rowIndex": 322,
            "approved": true,
            "params": {
                "freebase_tag": "talk_show_hosts",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.talk_show_hosts]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.talk_show_hosts]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6525577613
        },
        {
            "top10": [
                {
                    "label": "Jean-Luc Picard",
                    "number": 184063
                },
                {
                    "label": "Spock",
                    "number": 120141
                },
                {
                    "label": "Data",
                    "number": 66815
                },
                {
                    "label": "Leonard McCoy",
                    "number": 56418
                },
                {
                    "label": "Hikaru Sulu",
                    "number": 52406
                },
                {
                    "label": "Pavel Chekov",
                    "number": 44900
                },
                {
                    "label": "Khan Noonien Singh",
                    "number": 44768
                },
                {
                    "label": "Seven of Nine",
                    "number": 42573
                },
                {
                    "label": "Geordi La Forge",
                    "number": 40401
                },
                {
                    "label": "William Riker",
                    "number": 31738
                }
            ],
            "answer": "Jean-Luc Picard",
            "answerValue": 184063,
            "question": "Who was the most popular Star Trek character on Wikipedia in the past month?",
            "rowIndex": 319,
            "approved": true,
            "params": {
                "freebase_tag": "star_trek_characters",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.star_trek_characters]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.star_trek_characters]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6523376043
        },
        {
            "top10": [
                {
                    "label": "Kermit the Frog",
                    "number": 42719
                },
                {
                    "label": "Gonzo",
                    "number": 10270
                },
                {
                    "label": "Beaker",
                    "number": 10174
                },
                {
                    "label": "Swedish Chef",
                    "number": 7863
                },
                {
                    "label": "Statler and Waldorf",
                    "number": 7096
                },
                {
                    "label": "Miss Piggy",
                    "number": 6752
                },
                {
                    "label": "Animal",
                    "number": 5986
                },
                {
                    "label": "Rowlf the Dog",
                    "number": 5073
                },
                {
                    "label": "Rizzo the Rat",
                    "number": 5022
                },
                {
                    "label": "Fozzie Bear",
                    "number": 3732
                }
            ],
            "answer": "Kermit the Frog",
            "answerValue": 42719,
            "question": "Who is the most popular Muppet on Wikipedia?",
            "rowIndex": 320,
            "approved": true,
            "params": {
                "freebase_tag": "muppet",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.muppet]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.muppet]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6521677778
        },
        {
            "top10": [
                {
                    "label": "KFC",
                    "number": 486367
                },
                {
                    "label": "Burger King",
                    "number": 220976
                },
                {
                    "label": "Taco Bell",
                    "number": 102540
                },
                {
                    "label": "Pizza Hut",
                    "number": 102087
                },
                {
                    "label": "Chick-fil-A",
                    "number": 72446
                },
                {
                    "label": "In-N-Out Burger",
                    "number": 58113
                },
                {
                    "label": "Chipotle Mexican Grill",
                    "number": 53861
                },
                {
                    "label": "Dairy Queen",
                    "number": 51417
                },
                {
                    "label": "Tim Hortons",
                    "number": 45425
                },
                {
                    "label": "McDonald's",
                    "number": 37926
                }
            ],
            "answer": "KFC",
            "answerValue": 486367,
            "question": "What fast food chain was the most popular in the past month?",
            "rowIndex": 317,
            "approved": true,
            "params": {
                "freebase_tag": "fast_food",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.fast_food]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.fast_food]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6526442077
        },
        {
            "top10": [
                {
                    "label": "Blackjack",
                    "number": 129090
                },
                {
                    "label": "Poker",
                    "number": 119260
                },
                {
                    "label": "Contract bridge",
                    "number": 58876
                },
                {
                    "label": "Gin rummy",
                    "number": 22372
                },
                {
                    "label": "FreeCell",
                    "number": 18487
                },
                {
                    "label": "Canasta",
                    "number": 11638
                },
                {
                    "label": "Euchre",
                    "number": 9015
                },
                {
                    "label": "Whist",
                    "number": 8597
                },
                {
                    "label": "Pinochle",
                    "number": 6915
                },
                {
                    "label": "Belote",
                    "number": 5749
                }
            ],
            "answer": "Blackjack",
            "answerValue": 129090,
            "question": "What was the most popular card game on Wikipedia last month?",
            "rowIndex": 313,
            "approved": true,
            "params": {
                "freebase_tag": "card_games",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.card_games]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.card_games]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6522345107
        },
        {
            "top10": [
                {
                    "label": "Bastille Day",
                    "number": 949897
                },
                {
                    "label": "Eid al-Fitr",
                    "number": 559008
                },
                {
                    "label": "Independence Day",
                    "number": 435074
                },
                {
                    "label": "Ramadan",
                    "number": 391870
                },
                {
                    "label": "Canada Day",
                    "number": 249633
                },
                {
                    "label": "Day of the Dead",
                    "number": 173845
                },
                {
                    "label": "Eid al-Adha",
                    "number": 151009
                },
                {
                    "label": "Halloween",
                    "number": 135079
                },
                {
                    "label": "Christmas",
                    "number": 127630
                },
                {
                    "label": "Cinco de Mayo",
                    "number": 115662
                }
            ],
            "answer": "Bastille Day",
            "answerValue": 949897,
            "question": "What holiday was the most popular in the past month?",
            "rowIndex": 318,
            "approved": true,
            "params": {
                "freebase_tag": "holidays"
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.holidays]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.holidays]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name = 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6532211859
        },
        {
            "top10": [
                {
                    "label": "Iran",
                    "number": 58195
                },
                {
                    "label": "United States",
                    "number": 31242
                },
                {
                    "label": "Yemen",
                    "number": 29066
                },
                {
                    "label": "Egypt",
                    "number": 18247
                },
                {
                    "label": "Syria",
                    "number": 16576
                },
                {
                    "label": "Russia",
                    "number": 12767
                },
                {
                    "label": "Turkey",
                    "number": 11688
                },
                {
                    "label": "Pakistan",
                    "number": 10715
                },
                {
                    "label": "United Kingdom",
                    "number": 9111
                },
                {
                    "label": "Qatar",
                    "number": 8235
                }
            ],
            "answer": "Iran",
            "answerValue": 58195,
            "question": "Which country was mentioned with Saudi Arabia the most last year?",
            "rowIndex": 341,
            "approved": true,
            "params": {
                "country": "Saudi Arabia",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Saudi Arabia' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Saudi Arabia' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761319763
        },
        {
            "top10": [
                {
                    "label": "Disneyland",
                    "number": 164596
                },
                {
                    "label": "Cedar Point",
                    "number": 85177
                },
                {
                    "label": "Epcot",
                    "number": 52962
                },
                {
                    "label": "Hong Kong Disneyland",
                    "number": 38395
                },
                {
                    "label": "Universal Studios Singapore",
                    "number": 33362
                },
                {
                    "label": "Europa-Park",
                    "number": 31815
                },
                {
                    "label": "Thorpe Park",
                    "number": 28653
                },
                {
                    "label": "Alton Towers Resort",
                    "number": 27974
                },
                {
                    "label": "Six Flags Magic Mountain",
                    "number": 27577
                },
                {
                    "label": "Islands of Adventure",
                    "number": 26807
                }
            ],
            "answer": "Disneyland",
            "answerValue": 164596,
            "question": "What was the most popular amusement park on Wikipedia last month?",
            "rowIndex": 312,
            "approved": true,
            "params": {
                "freebase_tag": "amusement_parks",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.amusement_parks]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.amusement_parks]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6529308847
        },
        {
            "top10": [
                {
                    "label": "Donald Trump",
                    "number": 11365835
                },
                {
                    "label": "Barack Obama",
                    "number": 9296233
                },
                {
                    "label": "Hillary Rodham Clinton",
                    "number": 4855646
                },
                {
                    "label": "Adolf Hitler",
                    "number": 3136899
                },
                {
                    "label": "Bill Clinton",
                    "number": 2631275
                },
                {
                    "label": "David Cameron",
                    "number": 1913094
                },
                {
                    "label": "Theresa May",
                    "number": 1571413
                },
                {
                    "label": "Mahatma Gandhi",
                    "number": 1509978
                },
                {
                    "label": "Ronald Reagan",
                    "number": 1392325
                },
                {
                    "label": "Abraham Lincoln",
                    "number": 1354244
                }
            ],
            "answer": "Donald Trump",
            "answerValue": 11365835,
            "question": "Who was the most popular politician in the past month?",
            "rowIndex": 316,
            "approved": true,
            "params": {
                "freebase_tag": "politicians",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.politicians]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.politicians]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 7231676007
        },
        {
            "top10": [
                {
                    "label": "United States",
                    "number": 4477
                },
                {
                    "label": "France",
                    "number": 4069
                },
                {
                    "label": "Spain",
                    "number": 2593
                },
                {
                    "label": "Algeria",
                    "number": 2161
                },
                {
                    "label": "Belgium",
                    "number": 1335
                },
                {
                    "label": "Tunisia",
                    "number": 1299
                },
                {
                    "label": "Netherlands",
                    "number": 1152
                },
                {
                    "label": "Egypt",
                    "number": 1091
                },
                {
                    "label": "Germany",
                    "number": 1053
                },
                {
                    "label": "United Kingdom",
                    "number": 1024
                }
            ],
            "answer": "United States",
            "answerValue": 4477,
            "question": "Which country was mentioned with Morocco the most last year?",
            "rowIndex": 343,
            "approved": true,
            "params": {
                "country": "Morocco",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Morocco' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Morocco' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761314381
        },
        {
            "top10": [
                {
                    "label": "China",
                    "number": 5182
                },
                {
                    "label": "Russia",
                    "number": 2376
                },
                {
                    "label": "United States",
                    "number": 919
                },
                {
                    "label": "Japan",
                    "number": 581
                },
                {
                    "label": "South Korea",
                    "number": 450
                },
                {
                    "label": "Australia",
                    "number": 281
                },
                {
                    "label": "United Kingdom",
                    "number": 273
                },
                {
                    "label": "Turkey",
                    "number": 243
                },
                {
                    "label": "Kyrgyzstan",
                    "number": 231
                },
                {
                    "label": "Vietnam",
                    "number": 230
                }
            ],
            "answer": "China",
            "answerValue": 5182,
            "question": "Which country was mentioned with Mongolia the most last year?",
            "rowIndex": 344,
            "approved": true,
            "params": {
                "country": "Mongolia",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Mongolia' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Mongolia' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761308632
        },
        {
            "top10": [
                {
                    "label": "Pakistan",
                    "number": 61326
                },
                {
                    "label": "United States",
                    "number": 43243
                },
                {
                    "label": "Iraq",
                    "number": 13229
                },
                {
                    "label": "Iran",
                    "number": 12611
                },
                {
                    "label": "China",
                    "number": 9035
                },
                {
                    "label": "Russia",
                    "number": 6456
                },
                {
                    "label": "United Kingdom",
                    "number": 5395
                },
                {
                    "label": "Germany",
                    "number": 3912
                },
                {
                    "label": "India",
                    "number": 3553
                },
                {
                    "label": "Syria",
                    "number": 3388
                }
            ],
            "answer": "Pakistan",
            "answerValue": 61326,
            "question": "Which country was mentioned with Afghanistan the most last year?",
            "rowIndex": 345,
            "approved": true,
            "params": {
                "country": "Afghanistan",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Afghanistan' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Afghanistan' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761318012
        },
        {
            "top10": [
                {
                    "label": "China",
                    "number": 9189
                },
                {
                    "label": "United States",
                    "number": 6722
                },
                {
                    "label": "Malaysia",
                    "number": 5641
                },
                {
                    "label": "Vietnam",
                    "number": 5325
                },
                {
                    "label": "Myanmar",
                    "number": 5179
                },
                {
                    "label": "United Kingdom",
                    "number": 4174
                },
                {
                    "label": "Cambodia",
                    "number": 3933
                },
                {
                    "label": "Australia",
                    "number": 3700
                },
                {
                    "label": "Indonesia",
                    "number": 3002
                },
                {
                    "label": "Japan",
                    "number": 2888
                }
            ],
            "answer": "China",
            "answerValue": 9189,
            "question": "Which country was mentioned with Thailand the most last year?",
            "rowIndex": 348,
            "approved": true,
            "params": {
                "country": "Thailand",
                "year": 2016
            },
            "sql": "\nSELECT\n  other.country,\n  COUNT(*) AS total\nFROM (\n  SELECT\n    ccode,\n    other\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nWHERE\n  country.country = 'Thailand' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  other.country,\n  COUNT(UNIQUE(events.id)) AS total\nFROM (\n  SELECT\n    ccode,\n    other,\n    id\n  FROM (\n    SELECT\n      Actor1Code AS ccode,\n      Actor2Code AS other,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc1,\n    (\n    SELECT\n      Actor1Code AS other,\n      Actor2Code AS ccode,\n      Year,\n      GLOBALEVENTID as id\n    FROM\n      [gdelt-bq:full.events]) cc2\n  WHERE\n    Year = 2016) events\nJOIN\n  [gdelt-bq:extra.countryinfo] country\nON\n  country.iso3 = events.ccode\nJOIN\n  [gdelt-bq:extra.countryinfo] other\nON\n  events.other = other.iso3\nJOIN (\n  SELECT\n    *\n  FROM (\n    SELECT\n      sub,\n      obj AS alias,\n      CASE WHEN obj = 'userInput' THEN 1 ELSE 0 END AS input,\n      SUM(input) OVER (PARTITION BY sub) AS input_alias\n    FROM\n      [fh-bigquery:freebase20140119.triples_lang_en]\n    WHERE\n      (pred = '/common/topic/alias'\n        OR pred = '/type/object/name'))\n  WHERE\n    input_alias \u003e 0) aliases\nON\n  aliases.alias = other.country\nWHERE\n  country.country = 'Thailand' \nGROUP BY\n  country.country,\n  other.country\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "databases": "GDELT",
            "units": "Events",
            "hasPassingInputQuery": false,
            "rowsSearched": 761316252
        },
        {
            "top10": [
                {
                    "label": "Pittsburgh",
                    "number": 5.1850958639816715
                },
                {
                    "label": "Austin",
                    "number": 4.653137544172642
                },
                {
                    "label": "Chicago",
                    "number": 4.519762404308155
                },
                {
                    "label": "Dallas",
                    "number": 3.434154938703574
                },
                {
                    "label": "Melbourne",
                    "number": 3.0341089006044313
                },
                {
                    "label": "Philadelphia",
                    "number": 2.8278876857274153
                },
                {
                    "label": "Portland",
                    "number": 2.8068966727110634
                },
                {
                    "label": "Houston",
                    "number": 2.5610252135443083
                },
                {
                    "label": "Los Angeles",
                    "number": 2.5502960446748766
                },
                {
                    "label": "Minneapolis",
                    "number": 2.5025025025025025
                }
            ],
            "answer": "Pittsburgh",
            "answerValue": 5.1850958639816715,
            "question": "Which city's subreddit talked the most about pickles?",
            "rowIndex": 338,
            "approved": true,
            "params": {
                "per": 10000,
                "regex": "(?i)\\b(pickle|pickles|pickled)\\b"
            },
            "sql": "\nSELECT\n cities.city,\n SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(pickle|pickles|pickled)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n SELECT\n   body,\n   subreddit\n FROM\n   TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n [subreddits.cities] cities\nON\n comments.subreddit = cities.subreddit\nGROUP BY\n cities.city\nORDER BY\n per DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  cities.city,\n  SUM(CASE WHEN REGEXP_MATCH(body, r'(?i)\\b(pickle|pickles|pickled)\\b') THEN 1 ELSE 0 END) * 10000 / COUNT(*) AS per\nFROM (\n  SELECT\n    body,\n    subreddit\n  FROM\n    TABLE_QUERY([fh-bigquery:reddit_comments], 'regexp_match(table_id, \"^(2017|2016_(0[7-9]|1[0-2]))\")')) comments\nJOIN\n  [subreddits.cities] cities\nON\n  comments.subreddit = cities.subreddit\nJOIN\n  [fh-bigquery:freebase20140119.triples_lang_en] aliases\nON\n  aliases.sub = cities.mid\nWHERE\n  (aliases.pred = '/common/topic/alias'\n    OR aliases.pred = '/type/object/name')\n  AND aliases.obj = 'userInput'\nGROUP BY\n  cities.city\nORDER BY\n  per DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments per 10,000",
            "hasPassingInputQuery": false,
            "rowsSearched": 532396361
        },
        {
            "top10": [
                {
                    "label": "Homer Simpson",
                    "number": 141842
                },
                {
                    "label": "Bart Simpson",
                    "number": 51278
                },
                {
                    "label": "Marge Simpson",
                    "number": 45194
                },
                {
                    "label": "Lisa Simpson",
                    "number": 44704
                },
                {
                    "label": "Troy McClure",
                    "number": 24003
                },
                {
                    "label": "Milhouse Van Houten",
                    "number": 20919
                },
                {
                    "label": "Sideshow Bob",
                    "number": 14383
                },
                {
                    "label": "Krusty the Clown",
                    "number": 11704
                },
                {
                    "label": "Ned Flanders",
                    "number": 11548
                },
                {
                    "label": "Grampa Simpson",
                    "number": 10535
                }
            ],
            "answer": "Homer Simpson",
            "answerValue": 141842,
            "question": "Which of The Simpsons characters was the most popular in the last month?",
            "rowIndex": 325,
            "approved": true,
            "params": {
                "freebase_tag": "simpsons",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.simpsons]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.simpsons]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6522874692
        },
        {
            "top10": [
                {
                    "label": "Michael Bay",
                    "number": 512
                },
                {
                    "label": "Edgar Wright",
                    "number": 407
                },
                {
                    "label": "Jackie Chan",
                    "number": 335
                },
                {
                    "label": "Ron Howard",
                    "number": 249
                },
                {
                    "label": "Patty Jenkins",
                    "number": 209
                },
                {
                    "label": "Zack Snyder",
                    "number": 184
                },
                {
                    "label": "Prince",
                    "number": 161
                },
                {
                    "label": "Ridley Scott",
                    "number": 151
                },
                {
                    "label": "Wes Anderson",
                    "number": 148
                },
                {
                    "label": "George Lucas",
                    "number": 147
                }
            ],
            "answer": "Michael Bay",
            "answerValue": 512,
            "question": "What director was mentioned in /r/movies the most in the past month?",
            "rowIndex": 66,
            "approved": true,
            "params": {
                "freebase_tag": "directors",
                "subreddit": "movies",
                "top_wiki": 500
            },
            "sql": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.directors]) topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'movies') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  pop_topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    topic_wiki.mid AS mid,\n    topic_wiki.name AS name,\n    SUM(requests) AS total\n  FROM (\n    SELECT\n      topic.mid AS mid,\n      topic.name as name,\n      REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n    FROM (\n      SELECT\n        mid,\n        name\n      FROM\n        [freebase_tags.directors]\n      WHERE\n        name = 'userInput') topic\n    JOIN (\n      SELECT\n        REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n        sub AS mid\n      FROM\n        [fh-bigquery:freebase20140119.triples_nolang]\n      WHERE\n        obj CONTAINS '/wikipedia/en'\n        OR obj CONTAINS '/wikipedia/id'\n        AND pred = '/type/object/key') wiki\n    ON\n      wiki.mid = topic.mid) topic_wiki\n  JOIN\n    [fh-bigquery:wikipedia.pagecounts_201607] views\n  ON\n    views.title = topic_wiki.title\n  GROUP BY\n    mid,\n    name\n  ORDER BY\n    total DESC\n  LIMIT\n    500 ) pop_topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'movies') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', pop_topic.name, ' ')\nGROUP BY\n  pop_topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 6683037572
        },
        {
            "top10": [
                {
                    "label": "Matcha",
                    "number": 88187
                },
                {
                    "label": "Earl Grey tea",
                    "number": 67281
                },
                {
                    "label": "Pu-erh tea",
                    "number": 35988
                },
                {
                    "label": "Darjeeling tea",
                    "number": 22524
                },
                {
                    "label": "Sencha",
                    "number": 16777
                },
                {
                    "label": "Tea leaf grading",
                    "number": 15461
                },
                {
                    "label": "Lapsang souchong",
                    "number": 15214
                },
                {
                    "label": "Assam tea",
                    "number": 13368
                },
                {
                    "label": "Gunpowder tea",
                    "number": 7494
                },
                {
                    "label": "Da Hong Pao",
                    "number": 6875
                }
            ],
            "answer": "Matcha",
            "answerValue": 88187,
            "question": "What was the most popular type of tea in the last month?",
            "rowIndex": 326,
            "approved": true,
            "params": {
                "freebase_tag": "tea",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.tea]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.tea]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6522648777
        },
        {
            "top10": [
                {
                    "label": "Goofy",
                    "number": 45888
                },
                {
                    "label": "Pluto",
                    "number": 32993
                },
                {
                    "label": "Lassie",
                    "number": 17696
                },
                {
                    "label": "Brian Griffin",
                    "number": 15667
                },
                {
                    "label": "Pete",
                    "number": 13004
                },
                {
                    "label": "Spuds MacKenzie",
                    "number": 11126
                },
                {
                    "label": "Droopy Dog",
                    "number": 10046
                },
                {
                    "label": "Huckleberry Hound",
                    "number": 8068
                },
                {
                    "label": "Max Goof",
                    "number": 7906
                },
                {
                    "label": "Taco Bell Chihuahua",
                    "number": 7579
                }
            ],
            "answer": "Goofy",
            "answerValue": 45888,
            "question": "What was the name of the most popular fictional dog last month?",
            "rowIndex": 333,
            "approved": true,
            "params": {
                "freebase_tag": "dogs",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.dogs]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.dogs]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6522743925
        },
        {
            "top10": [
                {
                    "label": "John Cena",
                    "number": 1691785
                },
                {
                    "label": "Eminem",
                    "number": 1209126
                },
                {
                    "label": "Will Smith",
                    "number": 1155175
                },
                {
                    "label": "Kanye West",
                    "number": 989232
                },
                {
                    "label": "Tupac Shakur",
                    "number": 883713
                },
                {
                    "label": "50 Cent",
                    "number": 877386
                },
                {
                    "label": "Snoop Dogg",
                    "number": 853427
                },
                {
                    "label": "MF Grimm",
                    "number": 842023
                },
                {
                    "label": "Mark Wahlberg",
                    "number": 739712
                },
                {
                    "label": "Ice Cube",
                    "number": 739569
                }
            ],
            "answer": "John Cena",
            "answerValue": 1691785,
            "question": "Who was the most popular rapper in the last month?",
            "rowIndex": 324,
            "approved": true,
            "params": {
                "freebase_tag": "rappers"
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.rappers]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.rappers]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name = 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6564151547
        },
        {
            "top10": [
                {
                    "label": "USB",
                    "number": 1371138
                },
                {
                    "label": "Wi-Fi",
                    "number": 1174452
                },
                {
                    "label": "HDMI",
                    "number": 742223
                },
                {
                    "label": "AK-47",
                    "number": 724971
                },
                {
                    "label": "RAID",
                    "number": 591887
                },
                {
                    "label": "Radio control",
                    "number": 536035
                },
                {
                    "label": "Internet Protocol",
                    "number": 357013
                },
                {
                    "label": "Hashtag",
                    "number": 346137
                },
                {
                    "label": "ARPANET",
                    "number": 339104
                },
                {
                    "label": "Periodic Table",
                    "number": 295302
                }
            ],
            "answer": "USB",
            "answerValue": 1371138,
            "question": "What invention had the most pageviews in the past month?",
            "rowIndex": 328,
            "approved": true,
            "params": {
                "freebase_tag": "invention",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.invention]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.invention]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6558466859
        },
        {
            "top10": [
                {
                    "label": "Michael Phelps",
                    "number": 912467
                },
                {
                    "label": "Usain Bolt",
                    "number": 895011
                },
                {
                    "label": "Jesse Owens",
                    "number": 439018
                },
                {
                    "label": "Peter Sagan",
                    "number": 360660
                },
                {
                    "label": "Daniel Cormier",
                    "number": 314004
                },
                {
                    "label": "Oscar Pistorius",
                    "number": 302350
                },
                {
                    "label": "McKayla Maroney",
                    "number": 225444
                },
                {
                    "label": "Ian Thorpe",
                    "number": 175661
                },
                {
                    "label": "Carl Lewis",
                    "number": 174985
                },
                {
                    "label": "Johnny Weissmuller",
                    "number": 147541
                }
            ],
            "answer": "Michael Phelps",
            "answerValue": 912467,
            "question": "Who was the most popular Olympic Athlete in the past month?",
            "rowIndex": 330,
            "approved": true,
            "params": {
                "freebase_tag": "olympic_athletes",
                "substring": true
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.olympic_athletes]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.olympic_athletes]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name CONTAINS 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6997763844
        },
        {
            "top10": [
                {
                    "label": "YouTube",
                    "number": 5579775
                },
                {
                    "label": "Google",
                    "number": 3525068
                },
                {
                    "label": "Tesla Motors",
                    "number": 914463
                },
                {
                    "label": "Netflix",
                    "number": 831084
                },
                {
                    "label": "PayPal",
                    "number": 707399
                },
                {
                    "label": "eBay",
                    "number": 652210
                },
                {
                    "label": "The Walt Disney Company",
                    "number": 449445
                },
                {
                    "label": "Oracle Corporation",
                    "number": 446748
                },
                {
                    "label": "Nvidia",
                    "number": 441549
                },
                {
                    "label": "Pixar",
                    "number": 435324
                }
            ],
            "answer": "YouTube",
            "answerValue": 5579775,
            "question": "What California company was viewed the most on Wikipedia last month?",
            "rowIndex": 335,
            "approved": true,
            "params": {
                "freebase_tag": "ca_companies"
            },
            "sql": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.ca_companies]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid) topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic_wiki.name AS name,\n  SUM(requests) AS total\nFROM (\n  SELECT\n    topic.mid AS mid,\n    topic.name AS name,\n    REPLACE(REPLACE(wiki.title, '$0028', '('), '$0029', ')') AS title\n  FROM (\n    SELECT\n      mid,\n      name\n    FROM\n      [freebase_tags.ca_companies]) topic\n  JOIN (\n    SELECT\n      REGEXP_REPLACE(REGEXP_REPLACE(obj, '/wikipedia/en/', ''), '/wikipedia/id/', '') AS title,\n      sub AS mid\n    FROM\n      [fh-bigquery:freebase20140119.triples_nolang]\n    WHERE\n      obj CONTAINS '/wikipedia/en'\n      OR obj CONTAINS '/wikipedia/id'\n      AND pred = '/type/object/key') wiki\n  ON\n    wiki.mid = topic.mid\n  WHERE\n    topic.name = 'userInput') topic_wiki\nJOIN\n  [fh-bigquery:wikipedia.pagecounts_201607] views\nON\n  views.title = topic_wiki.title\nGROUP BY\n  mid,\n  name\nORDER BY\n  total DESC\nLIMIT\n  10\nIGNORE CASE\n",
            "databases": "Wikipedia",
            "units": "Views",
            "hasPassingInputQuery": false,
            "rowsSearched": 6610593525
        },
        {
            "top10": [
                {
                    "label": "Russia",
                    "number": 12909
                },
                {
                    "label": "China",
                    "number": 9936
                },
                {
                    "label": "Israel",
                    "number": 4719
                },
                {
                    "label": "Germany",
                    "number": 4578
                },
                {
                    "label": "Iran",
                    "number": 4187
                },
                {
                    "label": "Saudi Arabia",
                    "number": 3346
                },
                {
                    "label": "Qatar",
                    "number": 3230
                },
                {
                    "label": "India",
                    "number": 3095
                },
                {
                    "label": "Canada",
                    "number": 2974
                },
                {
                    "label": "Syria",
                    "number": 2882
                }
            ],
            "answer": "Russia",
            "answerValue": 12909,
            "question": "Which country was mentioned in /r/worldnews the most in the past month?",
            "rowIndex": 71,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "worldnews"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'worldnews') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'worldnews') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Comments",
            "hasPassingInputQuery": false,
            "rowsSearched": 64598055
        },
        {
            "top10": [
                {
                    "label": "Russia",
                    "number": 2863
                },
                {
                    "label": "China",
                    "number": 2055
                },
                {
                    "label": "Canada",
                    "number": 1318
                },
                {
                    "label": "North Korea",
                    "number": 1262
                },
                {
                    "label": "India",
                    "number": 909
                },
                {
                    "label": "Germany",
                    "number": 876
                },
                {
                    "label": "Iraq",
                    "number": 683
                },
                {
                    "label": "Israel",
                    "number": 619
                },
                {
                    "label": "Mexico",
                    "number": 607
                },
                {
                    "label": "Syria",
                    "number": 534
                }
            ],
            "answer": "Russia",
            "answerValue": 2863,
            "question": "Which country was discussed in /r/news the most in the past month?",
            "rowIndex": 70,
            "approved": true,
            "params": {
                "freebase_tag": "countries",
                "subreddit": "news"
            },
            "sql": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM\n  [freebase_tags.countries] topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'news') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "inputSQL": "\nSELECT\n  topic.name,\n  COUNT(UNIQUE(comments.id)) AS total\nFROM (\n  SELECT\n    *\n  FROM\n    [freebase_tags.countries]\n  WHERE\n    name = 'userInput') topic\nCROSS JOIN (\n  SELECT\n    id,\n    body\n  FROM\n    [fh-bigquery:reddit_comments.2017_06]\n  WHERE\n    subreddit = 'news') comments\nWHERE\n  comments.body CONTAINS CONCAT(' ', topic.name, ' ')\nGROUP BY\n  topic.name,\nORDER BY\n  total DESC IGNORE CASE\n",
            "databases": "Reddit",
            "units": "Mentions",
            "hasPassingInputQuery": false,
            "rowsSearched": 64492277
        }
    ],
    "total": 151
}